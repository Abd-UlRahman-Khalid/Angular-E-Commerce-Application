var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AllordersComponent.html",[0,0.29,1,0.94]],["body/components/AllordersComponent.html",[0,0.476,1,1.637,2,1.383,3,0.184,4,0.158,5,1.175,6,1.175,7,1.175,8,0.158,9,3.494,10,1.056,11,2.135,12,1.919,13,6.335,14,1.539,15,5.353,16,1.539,17,5.353,18,0.674,19,0.02,20,0.634,21,1.175,22,0.184,23,0.674,24,4.578,25,1.175,26,1.539,27,1.539,28,1.175,29,1.822,30,1.175,31,0.241,32,1.175,33,1.056,34,1.175,35,1.056,36,1.175,37,1.539,38,1.056,39,1.175,40,1.056,41,1.175,42,1.056,43,1.175,44,1.056,45,1.175,46,1.056,47,1.175,48,1.056,49,1.175,50,1.056,51,1.175,52,1.056,53,1.175,54,1.056,55,1.175,56,1.056,57,1.175,58,1.056,59,1.175,60,1.056,61,1.175,62,1.056,63,1.175,64,1.056,65,1.175,66,1.056,67,1.175,68,1.114,69,1.175,70,0.015,71,0.015]],["title/components/AppComponent.html",[0,0.29,33,0.94]],["body/components/AppComponent.html",[0,0.441,1,0.908,2,1.25,3,0.158,4,0.136,5,1.01,6,1.01,7,1.01,8,0.136,10,0.908,11,2.104,12,1.891,14,1.391,16,1.391,18,0.983,19,0.021,20,0.545,21,1.391,22,0.158,23,0.58,25,1.01,26,1.391,27,1.391,28,1.01,29,1.713,30,1.01,31,0.249,32,1.01,33,1.54,34,1.01,35,0.908,36,1.01,37,1.391,38,0.908,39,1.01,40,0.908,41,1.01,42,0.908,43,1.01,44,0.908,45,1.01,46,0.908,47,1.01,48,0.908,49,1.01,50,0.908,51,1.01,52,0.908,53,1.01,54,0.908,55,1.01,56,0.908,57,1.01,58,0.908,59,1.01,60,0.908,61,1.01,62,0.908,63,1.01,64,0.908,65,1.01,66,0.908,67,1.01,68,0.958,69,1.01,70,0.014,71,0.014,72,3.004,73,2.305,74,4.202,75,5.531,76,4.836,77,4.836,78,0.28,79,0.576,80,1.868,81,1.122,82,2.84,83,1.674,84,3.513,85,4.446,86,1.215,87,4.836,88,1.01,89,0.35,90,1.01,91,3.513,92,0.772,93,1.725,94,0.419,95,1.01,96,1.01,97,4.836,98,1.187,99,3.513,100,2.052,101,2.669,102,2.419,103,3.513,104,3.513,105,2.669,106,3.513,107,3.513,108,3.513,109,2.669]],["title/components/AuthLayoutComponent.html",[0,0.29,35,0.94]],["body/components/AuthLayoutComponent.html",[0,0.463,1,0.998,2,1.332,3,0.174,4,0.149,5,1.11,6,1.11,7,1.11,8,0.149,10,0.998,11,2.124,12,1.909,14,1.482,16,1.482,18,1.022,19,0.021,20,0.599,21,1.482,22,0.174,23,0.637,25,1.11,26,1.482,27,1.482,28,1.11,29,1.781,30,1.11,31,0.233,32,1.11,33,0.998,34,1.11,35,1.601,36,1.95,37,1.482,38,0.998,39,1.11,40,0.998,41,1.11,42,0.998,43,1.11,44,0.998,45,1.11,46,0.998,47,1.11,48,0.998,49,1.11,50,1.601,51,1.11,52,0.998,53,1.11,54,0.998,55,1.11,56,0.998,57,1.11,58,1.601,59,1.11,60,0.998,61,1.11,62,0.998,63,1.11,64,0.998,65,1.11,66,0.998,67,1.11,68,1.052,69,1.11,70,0.014,71,0.014,74,4.409,98,1.304,110,3.301,111,3.301,112,2.932,113,4.408,114,4.408,115,4.408,116,3.301,117,3.301]],["title/injectables/AuthService.html",[118,1.103,119,1.977]],["body/injectables/AuthService.html",[3,0.148,4,0.127,8,0.127,18,1.042,19,0.021,20,0.508,22,0.148,23,0.54,31,0.285,70,0.013,71,0.013,73,1.561,78,0.261,79,0.549,81,1.069,83,2.195,86,1.499,88,1.816,89,0.47,90,1.816,92,1.426,93,1.642,95,1.324,96,1.324,98,1.106,118,1.397,119,2.503,120,1.561,121,2.8,122,1.85,123,2.008,124,3.667,125,4.605,126,4.555,127,5.327,128,5.327,129,5.327,130,4.605,131,4.605,132,4.605,133,1.913,134,3.142,135,3.275,136,3.275,137,3.275,138,3.275,139,5.29,140,3.275,141,3.785,142,3.601,143,3.275,144,3.275,145,3.275,146,3.275,147,3.275,148,3.275,149,3.275,150,3.275,151,2.254,152,3.275,153,3.499,154,3.275,155,1.561,156,1.106,157,1.561,158,2.488,159,3.275,160,4.605,161,2.8,162,2.488,163,1.664,164,2.254,165,3.275,166,2.068,167,2.73,168,3.275,169,3.275,170,3.275,171,2.8,172,3.275,173,2.254,174,3.275,175,3.275,176,3.275,177,3.275,178,3.275,179,3.275,180,3.275,181,2.8,182,2.488,183,2.254,184,2.254,185,2.8,186,3.275,187,3.275,188,3.275,189,3.275,190,3.275,191,3.275]],["title/components/BlankLayoutComponent.html",[0,0.29,38,0.94]],["body/components/BlankLayoutComponent.html",[0,0.463,1,0.998,2,1.332,3,0.174,4,0.149,5,1.11,6,1.11,7,1.11,8,0.149,10,0.998,11,2.124,12,1.909,14,1.482,16,1.482,18,1.022,19,0.021,20,0.599,21,1.482,22,0.174,23,0.637,25,1.11,26,1.482,27,1.482,28,1.11,29,1.781,30,1.11,31,0.233,32,1.11,33,0.998,34,1.11,35,0.998,36,1.11,37,1.482,38,1.601,39,1.95,40,0.998,41,1.11,42,0.998,43,1.11,44,0.998,45,1.11,46,0.998,47,1.11,48,0.998,49,1.11,50,1.601,51,1.11,52,0.998,53,1.11,54,0.998,55,1.11,56,0.998,57,1.11,58,1.601,59,1.11,60,0.998,61,1.11,62,0.998,63,1.11,64,0.998,65,1.11,66,0.998,67,1.11,68,1.052,69,1.11,70,0.014,71,0.014,74,4.409,98,1.304,112,2.932,113,4.408,114,4.408,115,4.408,116,3.301,117,3.301,192,3.301,193,3.301]],["title/interfaces/Brand.html",[194,0.497,195,1.164]],["body/interfaces/Brand.html",[3,0.194,4,0.167,8,0.167,19,0.021,22,0.292,31,0.309,70,0.015,71,0.015,78,0.344,79,0.661,80,1.456,89,0.469,94,0.9,194,0.883,195,2.069,196,1.38,197,2.723,198,2.352,199,2.259,200,2.352,201,1.932,202,2.191,203,2.029,204,2.191,205,1.858,206,2.191,207,2.191,208,1.625,209,1.456,210,1.625,211,1.961,212,1.625,213,1.456,214,1.456,215,0.8]],["title/components/BrandsComponent.html",[0,0.29,40,0.94]],["body/components/BrandsComponent.html",[0,0.413,1,0.803,2,1.147,3,0.14,4,0.12,5,0.893,6,0.893,7,0.893,8,0.12,10,0.803,11,2.076,12,1.865,14,1.276,16,1.276,18,0.854,19,0.021,20,0.482,21,0.893,22,0.14,23,0.513,25,0.893,26,1.276,27,1.276,28,0.893,29,1.623,30,0.893,31,0.233,32,0.893,33,0.803,34,0.893,35,0.803,36,0.893,37,1.276,38,0.803,39,0.893,40,1.459,41,0.893,42,0.803,43,0.893,44,0.803,45,0.893,46,0.803,47,0.893,48,0.803,49,0.893,50,0.803,51,0.893,52,0.803,53,0.893,54,0.803,55,0.893,56,0.803,57,0.893,58,0.803,59,0.893,60,0.803,61,0.893,62,0.803,63,0.893,64,0.803,65,0.893,66,0.803,67,0.893,68,0.847,69,0.893,70,0.012,71,0.012,78,0.248,79,0.529,81,1.03,82,2.69,86,1.312,88,0.893,89,0.321,90,0.893,92,1.137,93,2.214,94,0.617,95,1.276,96,1.276,122,1.656,123,1.951,156,1.049,195,1.42,215,0.577,216,2.657,217,1.988,218,2.63,219,5.465,220,4.437,221,4.437,222,3.886,223,4.437,224,5.645,225,4.437,226,3.107,227,3.107,228,3.107,229,3.563,230,3.107,231,4.437,232,3.107,233,3.107,234,3.107,235,3.107,236,3.107,237,2.592,238,2.802,239,3.107,240,2.139,241,2.868,242,1.874,243,3.107,244,1.481,245,2.592,246,4.437,247,4.437]],["title/injectables/BrandsService.html",[118,1.103,222,2.504]],["body/injectables/BrandsService.html",[3,0.207,4,0.177,8,0.177,18,1.04,19,0.021,20,0.712,22,0.207,23,0.757,31,0.26,70,0.016,71,0.016,73,2.185,78,0.366,81,1.337,83,2.185,86,1.385,88,1.657,89,0.418,90,1.657,92,1.266,94,0.751,102,3.156,118,1.748,120,2.185,133,2.678,134,3.781,142,3.704,155,2.185,156,1.548,157,2.185,163,2.329,167,2.583,215,0.851,222,3.968,248,3.921,249,6.614,250,5.763,251,4.585,252,4.585,253,5.763,254,4.585,255,4.585,256,3.921,257,4.585]],["title/components/CartComponent.html",[0,0.29,42,0.94]],["body/components/CartComponent.html",[0,0.345,1,0.595,2,0.917,3,0.104,4,0.089,5,0.662,6,0.662,7,0.662,8,0.089,10,0.595,11,1.994,12,1.792,14,1.02,16,1.02,18,0.956,19,0.021,20,0.357,21,1.02,22,0.104,23,0.38,25,0.662,26,1.02,27,1.02,28,0.662,29,1.4,30,0.662,31,0.22,32,0.662,33,0.595,34,0.662,35,0.595,36,0.662,37,1.02,38,0.595,39,0.662,40,0.595,41,0.662,42,1.259,43,0.662,44,0.595,45,0.662,46,0.595,47,0.662,48,0.595,49,0.662,50,0.595,51,0.662,52,0.595,53,0.662,54,0.595,55,0.662,56,0.595,57,0.662,58,0.595,59,0.662,60,0.595,61,0.662,62,0.595,63,0.662,64,0.595,65,0.662,66,0.595,67,0.662,68,0.627,69,0.662,70,0.01,71,0.01,78,0.183,79,0.423,80,1.645,81,0.823,82,2.321,86,1.273,88,1.02,89,0.314,90,1.02,92,1.156,93,1.983,94,0.58,95,1.02,96,1.02,98,0.777,122,1.386,123,1.633,141,1.251,156,0.777,181,3.035,203,1.076,209,1.199,215,0.659,217,1.59,218,2.201,241,1.169,242,2.057,244,2.065,245,2.073,258,1.967,259,4.143,260,2.241,261,1.929,262,3.549,263,3.549,264,3.549,265,2.201,266,4.332,267,4.87,268,3.549,269,3.549,270,2.301,271,2.301,272,2.301,273,2.301,274,2.301,275,2.301,276,1.499,277,2.301,278,2.673,279,2.301,280,1.453,281,2.301,282,1.453,283,1.748,284,2.301,285,1.251,286,2.301,287,1.967,288,2.301,289,2.301,290,2.301,291,2.301,292,2.301,293,2.301,294,2.845,295,1.967,296,4.332,297,3.353,298,2.301,299,4.87,300,3.549,301,4.164,302,3.549,303,3.549,304,4.87,305,3.549,306,3.549,307,2.241,308,3.549,309,3.549,310,3.549,311,3.549,312,3.549,313,3.549,314,1.967,315,3.549,316,3.549,317,2.301,318,3.549,319,1.967,320,2.065,321,2.301,322,4.332,323,2.301,324,1.748,325,2.301,326,3.549,327,2.301,328,2.301,329,4.87,330,2.696,331,3.549,332,2.443,333,3.035,334,3.549,335,3.549,336,3.549,337,1.499,338,3.549,339,3.549,340,3.549,341,3.549,342,3.353,343,4.164,344,3.549,345,3.549,346,3.549,347,3.035,348,3.035,349,3.035,350,3.035]],["title/injectables/CartService.html",[118,1.103,265,1.848]],["body/injectables/CartService.html",[3,0.171,4,0.146,8,0.146,18,0.948,19,0.021,20,0.587,22,0.171,23,0.624,31,0.277,70,0.014,71,0.014,73,1.802,78,0.302,79,0.606,81,1.18,83,1.802,86,1.482,88,1.767,89,0.464,90,1.767,92,1.408,94,0.787,95,1.088,96,1.088,102,2.604,118,1.542,120,1.802,133,2.209,134,3.34,142,3.588,155,1.802,157,1.802,163,1.922,164,2.604,167,2.873,173,2.604,203,1.542,215,1.141,265,2.584,276,1.597,351,3.234,352,4.348,353,5.085,354,5.745,355,5.745,356,5.085,357,5.085,358,3.782,359,3.782,360,3.782,361,3.782,362,3.782,363,3.782,364,3.782,365,3.782,366,5.745,367,3.782,368,3.782,369,3.234,370,3.782,371,3.782,372,2.873,373,3.782,374,3.782,375,3.782,376,3.782,377,3.782,378,3.782,379,3.782,380,3.782,381,3.782,382,3.782,383,5.085,384,3.782,385,5.085,386,5.085,387,3.782]],["title/components/CategoriesComponent.html",[0,0.29,44,0.94]],["body/components/CategoriesComponent.html",[0,0.377,1,0.685,2,1.021,3,0.12,4,0.102,5,0.762,6,0.762,7,0.762,8,0.102,10,0.685,11,2.035,12,1.829,14,1.136,16,1.136,18,1.089,19,0.021,20,0.412,21,1.136,22,0.12,23,0.437,25,0.762,26,1.136,27,1.136,28,0.762,29,1.506,30,0.762,31,0.213,32,0.762,33,0.685,34,0.762,35,0.685,36,0.762,37,1.136,38,0.685,39,0.762,40,0.685,41,0.762,42,0.685,43,0.762,44,1.353,45,0.762,46,0.685,47,0.762,48,0.685,49,0.762,50,0.685,51,0.762,52,0.685,53,0.762,54,0.685,55,0.762,56,0.685,57,0.762,58,0.685,59,0.762,60,0.685,61,0.762,62,0.685,63,0.762,64,0.685,65,0.762,66,0.685,67,0.762,68,0.723,69,0.762,70,0.011,71,0.011,78,0.211,79,0.471,81,0.917,82,2.495,86,1.374,88,0.762,89,0.342,90,0.762,92,1.038,93,1.997,94,0.667,95,1.61,96,1.61,98,0.895,100,1.549,122,2.045,123,2.409,156,0.895,201,1.188,215,0.492,217,1.771,218,2.4,237,2.308,238,2.496,240,1.825,241,2.4,242,1.12,245,2.308,259,1.674,260,1.674,261,1.441,265,2.661,280,2.496,282,1.674,285,1.441,295,2.267,320,1.263,388,2.267,389,4.622,390,3.589,391,3.952,392,3.952,393,3.059,394,3.589,395,3.307,396,2.721,397,5.236,398,2.721,399,2.651,400,2.651,401,2.651,402,2.651,403,2.984,404,2.651,405,3.379,406,2.651,407,2.651,408,2.496,409,2.651,410,1.441,411,1.825,412,1.825,413,2.014,414,2.014,415,1.549,416,2.014,417,1.674,418,1.347,419,2.014,420,2.267,421,2.651,422,2.267,423,2.267,424,3.002,425,2.014,426,2.014,427,1.347,428,1.825,429,1.825,430,1.825,431,2.014,432,3.379,433,3.379,434,3.379]],["title/injectables/CategoriesService.html",[118,1.103,393,2.124]],["body/injectables/CategoriesService.html",[3,0.21,4,0.18,8,0.18,18,1.048,19,0.021,20,0.724,22,0.21,23,0.77,31,0.263,70,0.016,71,0.016,73,2.223,78,0.372,81,1.352,83,2.776,86,1.396,88,1.675,89,0.422,90,1.675,92,1.28,94,0.694,118,1.767,120,2.223,122,1.493,133,2.725,134,3.617,142,3.454,155,2.223,157,2.223,163,2.37,164,3.211,167,2.611,215,0.866,393,3.403,435,3.989,436,6.353,437,5.826,438,4.664,439,4.664,440,4.664,441,4.664,442,4.664,443,4.664,444,4.664,445,4.664]],["title/interfaces/Category.html",[194,0.497,211,1.103]],["body/interfaces/Category.html",[3,0.193,4,0.166,8,0.166,19,0.021,22,0.301,31,0.301,70,0.015,71,0.015,78,0.341,79,0.658,80,1.446,89,0.467,94,0.896,194,0.912,195,1.37,196,1.37,198,2.379,199,2.178,200,2.254,203,2.073,205,1.852,208,1.614,209,1.446,210,1.614,211,2.073,212,1.614,213,1.446,214,1.446,215,0.795,276,1.809,278,2.176,337,2.579,427,2.176,446,2.501,447,2.704,448,3,449,2.041,450,2.704]],["title/interfaces/Category-1.html",[194,0.416,211,0.923,451,1.777]],["body/interfaces/Category-1.html",[3,0.194,4,0.167,8,0.167,19,0.021,22,0.292,31,0.309,70,0.015,71,0.015,78,0.344,79,0.661,80,1.456,89,0.469,94,0.9,194,0.883,195,1.96,196,1.38,197,2.723,198,2.352,199,2.259,200,2.352,201,1.932,202,2.191,203,2.029,204,2.191,205,1.858,206,2.191,207,2.191,208,1.625,209,1.456,210,1.625,211,2.029,212,1.625,213,1.456,214,1.456,215,0.8]],["title/interfaces/Category-2.html",[194,0.416,211,0.923,452,1.654]],["body/interfaces/Category-2.html",[3,0.194,4,0.167,8,0.167,19,0.021,22,0.292,31,0.302,70,0.015,71,0.015,78,0.344,79,0.661,80,1.456,89,0.469,94,0.897,141,2.344,194,0.883,195,1.38,196,1.38,198,2.312,199,2.184,200,2.312,202,2.191,203,2.112,204,2.191,205,1.858,206,2.191,207,2.191,208,1.625,209,1.456,210,1.625,211,2.076,212,1.625,213,1.456,214,1.456,215,0.8,276,1.821,449,2.055,453,2.723,454,2.344,455,2.968,456,3.238]],["title/components/CheckoutComponent.html",[0,0.29,46,0.94]],["body/components/CheckoutComponent.html",[0,0.395,1,0.744,2,1.085,3,0.13,4,0.111,5,0.828,6,0.828,7,0.828,8,0.111,10,0.744,11,2.057,12,1.848,14,1.207,16,1.207,18,0.899,19,0.021,20,0.447,21,1.207,22,0.13,23,0.475,25,0.828,26,1.207,27,1.207,28,0.828,29,1.567,30,0.828,31,0.189,32,0.828,33,0.744,34,0.828,35,0.744,36,0.828,37,1.207,38,0.744,39,0.828,40,0.744,41,0.828,42,0.744,43,0.828,44,0.744,45,0.828,46,1.408,47,0.828,48,0.744,49,0.828,50,0.744,51,0.828,52,0.744,53,0.828,54,0.744,55,0.828,56,0.744,57,0.828,58,0.744,59,0.828,60,0.744,61,0.828,62,0.744,63,0.828,64,0.744,65,0.828,66,0.744,67,0.828,68,0.785,69,0.828,70,0.012,71,0.012,78,0.23,79,0.5,81,0.974,82,2.597,86,1.434,89,0.304,92,1.197,93,2.066,94,0.343,95,1.567,96,1.567,98,0.972,122,2.089,123,2.461,156,0.972,217,1.882,218,2.519,242,1.216,244,1.372,294,1.681,297,1.982,320,1.372,347,3.591,348,3.591,418,1.463,457,2.461,458,4.199,459,3.413,460,4.199,461,4.199,462,4.239,463,4.199,464,4.199,465,4.239,466,3.413,467,4.957,468,4.957,469,4.957,470,2.878,471,2.878,472,2.878,473,2.878,474,2.878,475,2.878,476,2.878,477,2.891,478,2.878,479,2.461,480,2.878,481,2.878,482,2.878,483,1.982,484,1.982,485,2.878,486,2.461,487,2.878,488,2.878,489,2.878,490,2.878,491,2.878,492,2.878,493,2.878,494,2.878,495,2.878,496,2.878,497,2.878,498,2.461,499,2.878,500,2.878,501,2.461,502,2.878,503,2.878,504,2.878,505,2.878,506,2.878,507,2.878,508,2.878,509,2.878,510,2.461,511,2.187,512,2.878,513,2.878,514,3.591,515,3.591,516,4.199,517,4.199,518,5.449,519,4.199]],["title/interfaces/Datum.html",[194,0.497,456,2.124]],["body/interfaces/Datum.html",[3,0.159,4,0.136,8,0.136,19,0.021,22,0.269,31,0.218,70,0.014,71,0.014,78,0.281,79,0.577,80,2.014,89,0.527,94,0.895,141,1.913,194,0.815,195,1.908,196,1.126,198,2.182,199,1.189,200,2.182,202,3.03,203,2.213,204,3.03,205,2.045,206,3.03,207,3.03,208,2.248,209,2.014,210,2.248,211,2.139,212,2.248,213,2.014,214,2.014,215,1.107,276,1.487,449,2.842,453,2.223,454,1.913,455,2.423,456,3.234]],["title/components/DetailsComponent.html",[0,0.29,48,0.94]],["body/components/DetailsComponent.html",[0,0.419,1,0.825,2,1.169,3,0.144,4,0.123,5,0.918,6,0.918,7,0.918,8,0.123,10,0.825,11,2.082,12,1.871,14,1.3,16,1.3,18,1.034,19,0.021,20,0.495,21,0.918,22,0.144,23,0.527,25,0.918,26,1.3,27,1.3,28,0.918,29,1.643,30,0.918,31,0.204,32,0.918,33,0.825,34,0.918,35,0.825,36,0.918,37,1.3,38,0.825,39,0.918,40,0.825,41,0.918,42,0.825,43,0.918,44,0.825,45,0.918,46,0.825,47,0.918,48,1.477,49,0.918,50,0.825,51,0.918,52,0.825,53,0.918,54,0.825,55,0.918,56,0.825,57,0.918,58,0.825,59,0.918,60,0.825,61,0.918,62,1.169,63,0.918,64,0.825,65,0.918,66,0.825,67,0.918,68,0.87,69,0.918,70,0.013,71,0.013,78,0.254,79,0.539,81,1.049,82,2.723,86,1.325,89,0.328,92,0.701,93,1.613,95,1.51,96,1.51,98,1.078,122,2.005,123,2.361,156,1.774,201,2.561,217,2.027,218,2.669,242,1.348,294,2.642,297,3.113,372,3.436,393,1.864,410,3.279,411,2.197,412,2.197,419,2.424,462,5.158,501,2.729,514,3.867,520,2.729,521,4.522,522,4.522,523,4.522,524,3.191,525,3.191,526,3.191,527,3.191,528,3.191,529,3.191,530,3.191,531,3.191,532,3.191,533,3.191,534,3.191,535,3.191,536,3.191,537,3.191,538,4.522,539,4.522]],["title/injectables/FlowbiteService.html",[85,2.504,118,1.103]],["body/injectables/FlowbiteService.html",[3,0.214,4,0.183,8,0.183,18,0.97,19,0.021,20,0.735,22,0.214,23,0.781,31,0.265,70,0.016,71,0.016,73,2.256,78,0.378,81,1.365,83,2.256,85,4.049,86,1.292,88,1.691,89,0.426,90,1.691,92,1.04,93,2.281,109,4.468,118,1.784,120,2.256,122,1.515,156,1.599,163,2.406,285,2.574,540,4.049,541,5.881,542,4.735,543,4.735,544,5.881,545,5.881,546,4.735,547,4.735,548,4.735,549,4.735,550,4.735,551,4.735,552,4.735,553,4.735,554,4.735]],["title/components/FooterComponent.html",[0,0.29,50,0.94]],["body/components/FooterComponent.html",[0,0.442,1,0.913,2,1.255,3,0.159,4,0.137,5,1.016,6,1.016,7,1.016,8,0.137,10,0.913,11,2.105,12,1.892,14,1.396,16,1.396,18,0.583,19,0.02,20,0.548,21,1.016,22,0.159,23,0.583,25,1.016,26,1.396,27,1.396,28,1.016,29,1.717,30,1.016,31,0.219,32,1.016,33,0.913,34,1.016,35,0.913,36,1.016,37,1.396,38,0.913,39,1.016,40,0.913,41,1.016,42,0.913,43,1.016,44,0.913,45,1.016,46,0.913,47,1.016,48,0.913,49,1.016,50,1.544,51,1.016,52,0.913,53,1.016,54,0.913,55,1.016,56,0.913,57,1.016,58,0.913,59,1.016,60,0.913,61,1.016,62,0.913,63,1.016,64,0.913,65,1.016,66,0.913,67,1.016,68,0.963,69,1.016,70,0.014,71,0.014,92,1.067,330,4.537,332,3.343,555,3.021,556,4.855,557,4.855,558,4.855,559,4.855,560,4.855,561,4.855,562,5.973,563,5.973,564,4.855,565,4.855,566,4.855,567,3.689,568,4.855,569,4.855,570,4.855,571,4.855,572,4.855,573,4.855,574,4.855,575,4.855,576,4.855,577,5.973,578,4.855,579,4.855,580,4.855,581,4.855,582,4.855,583,3.533,584,4.855,585,4.855,586,4.855,587,4.855]],["title/components/ForgetpasswordComponent.html",[0,0.29,52,0.94]],["body/components/ForgetpasswordComponent.html",[0,0.315,1,0.516,2,0.821,3,0.09,4,0.077,5,0.574,6,0.574,7,0.574,8,0.077,10,0.516,11,1.95,12,1.752,14,0.914,16,0.914,18,0.812,19,0.021,20,0.31,21,0.914,22,0.09,23,0.33,25,0.574,26,0.914,27,0.914,28,0.574,29,1.296,30,0.574,31,0.143,32,0.574,33,0.516,34,0.574,35,0.516,36,0.574,37,0.914,38,0.516,39,0.574,40,0.516,41,0.574,42,0.516,43,0.574,44,0.516,45,0.574,46,0.516,47,0.574,48,0.516,49,0.574,50,0.516,51,0.574,52,1.165,53,0.574,54,0.516,55,0.574,56,0.516,57,0.574,58,0.516,59,0.574,60,0.516,61,0.574,62,0.516,63,0.574,64,0.516,65,0.574,66,0.516,67,0.574,68,0.545,69,0.574,70,0.009,71,0.009,78,0.159,79,0.379,81,0.737,86,1.323,89,0.357,92,0.869,93,1.411,95,1.58,96,1.58,98,0.675,105,2.413,119,2.15,122,1.677,123,1.975,124,2.723,151,1.375,156,0.675,166,1.261,203,0.606,241,1.015,242,1.671,244,1.885,283,1.517,294,2.311,297,2.723,320,1.514,333,3.855,418,1.015,451,2.311,452,2.15,459,2.723,477,4.145,483,1.375,484,1.375,510,1.708,588,1.708,589,3.177,590,3.177,591,3.177,592,2.413,593,3.177,594,3.177,595,3.177,596,3.955,597,3.955,598,3.955,599,1.997,600,1.997,601,1.997,602,1.375,603,1.997,604,1.517,605,1.167,606,1.997,607,3.1,608,3.425,609,4.332,610,4.332,611,3.425,612,4.508,613,3.177,614,1.997,615,1.997,616,1.997,617,1.997,618,3.177,619,3.177,620,3.177,621,1.997,622,1.375,623,1.997,624,1.517,625,1.375,626,1.997,627,1.997,628,1.997,629,1.997,630,1.997,631,1.997,632,3.005,633,1.997,634,1.997,635,3.177,636,3.981,637,1.997,638,1.997,639,2.723,640,1.997,641,1.997,642,1.997,643,1.708,644,1.708,645,2.717,646,4.752,647,4.508,648,4.887,649,1.997,650,1.997,651,4.332,652,1.997,653,4.332,654,1.997,655,3.425,656,3.425,657,3.425,658,3.425,659,4.508,660,3.981,661,3.177,662,1.997,663,1.997,664,3.425,665,3.425,666,3.425,667,1.997,668,1.997,669,3.103,670,3.103,671,3.425,672,3.103,673,3.425,674,3.425,675,1.997,676,1.997,677,1.997,678,1.997,679,1.997,680,1.997,681,1.997,682,1.997,683,3.177,684,1.997,685,1.997,686,1.997,687,1.997,688,1.997,689,1.997,690,1.997,691,1.997,692,1.997,693,1.997,694,1.997,695,1.997,696,1.997,697,1.997,698,1.997,699,1.997]],["title/components/HomeComponent.html",[0,0.29,54,0.94]],["body/components/HomeComponent.html",[0,0.267,1,0.405,2,0.675,3,0.071,4,0.061,5,0.451,6,0.451,7,0.451,8,0.061,10,0.405,11,1.863,12,1.675,14,0.751,16,0.751,18,1.027,19,0.021,20,0.244,21,0.751,22,0.071,23,0.259,25,0.451,26,0.751,27,1.123,28,0.451,29,1.123,30,0.451,31,0.176,32,0.451,33,0.405,34,0.451,35,0.405,36,0.451,37,0.751,38,0.405,39,0.451,40,0.405,41,0.451,42,0.405,43,0.451,44,0.405,45,0.451,46,0.405,47,0.451,48,0.405,49,0.451,50,0.405,51,0.451,52,0.405,53,0.451,54,1.009,55,0.451,56,0.405,57,0.451,58,0.405,59,0.451,60,0.405,61,0.451,62,0.405,63,0.451,64,0.405,65,0.451,66,0.405,67,0.451,68,0.428,69,0.451,70,0.007,71,0.007,78,0.125,79,0.311,81,0.606,82,1.861,86,1.398,88,0.751,89,0.376,90,0.751,92,1.028,93,1.924,94,0.619,95,1.679,96,1.679,98,0.53,100,1.958,101,1.192,122,2.036,123,2.398,156,0.53,157,0.748,201,1.502,215,0.485,217,1.17,218,1.703,237,2.282,238,2.467,240,1.797,241,2.521,242,1.102,244,1.244,245,2.282,260,2.116,261,1.822,265,1.985,280,1.648,282,0.991,283,1.192,285,0.853,307,3.822,320,1.244,330,1.983,337,1.102,342,1.797,389,3.77,390,2.546,393,2.282,394,3.295,395,2.467,396,1.797,398,1.797,403,2.116,405,2.232,408,1.648,410,2.123,411,1.08,412,1.08,413,2.546,414,2.546,415,1.958,416,1.192,417,0.991,418,0.797,419,1.192,420,1.342,422,1.342,423,1.342,424,2.546,425,1.192,426,1.192,427,1.985,428,1.08,429,1.797,430,1.797,432,2.232,433,2.232,434,2.232,451,2.282,452,1.419,567,2.967,605,3.536,607,1.419,639,1.797,670,1.797,700,1.342,701,2.866,702,3.351,703,2.61,704,2.61,705,2.866,706,3.351,707,3.351,708,3.34,709,2.282,710,2.232,711,3.906,712,3.34,713,3.906,714,1.569,715,2.232,716,1.569,717,1.569,718,1.569,719,1.569,720,1.569,721,1.569,722,1.569,723,1.569,724,3.708,725,3.34,726,3.34,727,3.34,728,3.34,729,3.34,730,3.34,731,3.34,732,3.34,733,4.757,734,2.689,735,1.569,736,2.61,737,2.61,738,2.61,739,2.967,740,2.61,741,2.61,742,2.61,743,2.61,744,1.569,745,1.569,746,2.61,747,1.569,748,2.232,749,1.569,750,1.569,751,2.232,752,1.569,753,1.569,754,1.983,755,1.569,756,1.192,757,1.192,758,1.192,759,1.569,760,1.569,761,1.342,762,1.192,763,1.342,764,1.569,765,1.342,766,1.342,767,1.569,768,2.61,769,1.569,770,3.222,771,1.342,772,1.569,773,1.569,774,1.569,775,1.569,776,1.569,777,1.569,778,1.342,779,1.983,780,2.61,781,1.983,782,3.34,783,2.232,784,2.232,785,1.983,786,2.232,787,2.232,788,2.232,789,2.232,790,2.232,791,2.232,792,2.232,793,2.232,794,2.232,795,2.232]],["title/interfaces/IBrands.html",[194,0.497,229,2.504]],["body/interfaces/IBrands.html",[3,0.218,4,0.187,8,0.187,19,0.02,22,0.218,31,0.304,70,0.017,71,0.017,78,0.385,79,0.71,89,0.511,94,0.895,194,0.66,196,1.546,198,2.276,199,2.276,200,2.276,213,2.276,214,2.276,229,4.1,796,4.132]],["title/interfaces/ICart.html",[194,0.497,278,1.848]],["body/interfaces/ICart.html",[3,0.184,4,0.158,8,0.158,19,0.021,22,0.297,31,0.241,70,0.015,71,0.015,78,0.326,79,0.638,80,1.38,89,0.498,94,0.893,194,0.899,195,1.308,196,1.308,198,2.356,199,1.38,200,1.808,203,2.159,205,1.811,208,1.54,209,1.38,210,1.54,211,1.995,212,1.54,213,2.14,214,2.14,215,0.759,276,1.726,278,2.72,337,2.522,427,3.219,446,2.387,447,4.001,448,3.444,449,3.019,450,4.001]],["title/interfaces/ICategories.html",[194,0.497,403,2.297]],["body/interfaces/ICategories.html",[3,0.218,4,0.187,8,0.187,19,0.02,22,0.218,31,0.304,70,0.017,71,0.017,78,0.385,79,0.71,89,0.511,94,0.895,194,0.66,196,1.546,198,2.276,199,2.276,200,2.276,213,2.276,214,2.276,403,3.761,797,4.132]],["title/interfaces/IProduct.html",[194,0.497,201,1.63]],["body/interfaces/IProduct.html",[3,0.161,4,0.138,8,0.138,19,0.021,22,0.27,31,0.251,70,0.014,71,0.014,78,0.284,79,0.582,80,2.025,89,0.526,94,0.898,194,0.819,195,2.165,196,1.141,197,2.253,198,2.244,199,1.65,200,2.244,201,2.19,202,3.047,203,2.182,204,3.047,205,2.052,206,3.047,207,3.047,208,2.26,209,2.025,210,2.26,211,2.081,212,2.26,213,2.025,214,2.025,215,1.113]],["title/interfaces/IWhish.html",[194,0.497,454,1.977]],["body/interfaces/IWhish.html",[3,0.198,4,0.169,8,0.169,19,0.02,22,0.293,31,0.253,70,0.016,71,0.016,78,0.349,79,0.667,80,1.48,89,0.447,94,0.89,141,3.536,194,0.889,195,1.402,196,1.402,198,2.085,199,1.48,200,2.085,202,2.226,203,2.168,204,2.226,205,1.872,206,2.226,207,2.226,208,1.651,209,1.48,210,1.651,211,2.039,212,1.651,213,1.48,214,1.48,215,0.813,276,2.748,449,2.088,453,2.767,454,3.044,455,4.478,456,3.8]],["title/components/LoginComponent.html",[0,0.29,56,0.94]],["body/components/LoginComponent.html",[0,0.356,1,0.624,2,0.952,3,0.109,4,0.093,5,0.695,6,0.695,7,0.695,8,0.093,10,0.624,11,2.009,12,1.805,14,1.059,16,1.059,18,0.888,19,0.021,20,0.375,21,1.059,22,0.109,23,0.399,25,0.695,26,1.059,27,1.059,28,0.695,29,1.437,30,0.695,31,0.166,32,0.695,33,0.624,34,0.695,35,0.624,36,0.695,37,1.059,38,0.624,39,0.695,40,0.624,41,0.695,42,0.624,43,0.695,44,0.624,45,0.695,46,0.624,47,0.695,48,0.624,49,0.695,50,0.624,51,0.695,52,0.624,53,0.695,54,0.624,55,0.695,56,1.291,57,0.695,58,0.624,59,0.695,60,0.624,61,0.695,62,0.624,63,0.695,64,0.624,65,0.695,66,0.624,67,0.695,68,0.659,69,0.695,70,0.01,71,0.01,78,0.193,79,0.439,81,0.855,86,1.295,89,0.362,92,0.531,93,0.862,94,0.439,95,1.63,96,1.63,98,0.816,119,2.428,122,1.814,123,2.137,124,3.075,151,1.663,155,1.151,156,0.816,162,1.835,166,1.526,182,2.799,183,1.663,184,3.703,242,1.02,244,1.151,261,2.428,294,1.411,320,1.151,324,1.835,418,1.228,451,1.411,452,1.313,459,2.537,477,3.44,483,1.663,484,1.663,592,2.799,602,1.663,604,1.835,605,1.411,607,2.003,608,2.799,609,3.796,610,3.796,611,2.799,622,1.663,624,1.835,625,1.663,632,1.835,636,2.799,639,1.663,643,2.066,644,2.066,645,3.151,646,4.618,648,4.307,651,3.796,653,3.796,655,2.799,656,2.799,657,2.799,658,2.799,660,2.799,664,2.799,665,2.799,666,2.799,669,2.537,670,2.537,671,2.799,672,2.537,673,2.799,674,2.799,734,1.663,779,2.799,781,2.799,798,2.066,799,3.684,800,3.684,801,4.272,802,3.684,803,4.848,804,3.819,805,2.416,806,2.416,807,2.416,808,2.416,809,3.151,810,3.151,811,3.151,812,2.416,813,2.416,814,2.416,815,2.066,816,2.066,817,2.416,818,2.066,819,2.066,820,2.416,821,2.066,822,2.416,823,2.416,824,1.835,825,2.066,826,2.066,827,2.066,828,2.416,829,2.416,830,2.416,831,2.066,832,2.066,833,2.066,834,2.066,835,2.066,836,2.416,837,2.416,838,2.416,839,2.416,840,2.416,841,2.416,842,2.416,843,2.416,844,3.684,845,3.684,846,2.416,847,2.416,848,2.416,849,2.416,850,2.416,851,2.416,852,2.416,853,2.416]],["title/components/NavbarComponent.html",[0,0.29,58,0.94]],["body/components/NavbarComponent.html",[0,0.439,1,0.9,2,1.242,3,0.157,4,0.135,5,1.001,6,1.001,7,1.001,8,0.135,10,0.9,11,2.102,12,1.889,14,1.382,16,1.382,18,0.908,19,0.021,20,0.54,21,1.382,22,0.157,23,0.574,25,1.001,26,1.382,27,1.382,28,1.001,29,1.707,30,1.001,31,0.217,32,1.001,33,0.9,34,1.001,35,0.9,36,1.001,37,1.382,38,0.9,39,1.001,40,0.9,41,1.001,42,0.9,43,1.001,44,0.9,45,1.001,46,0.9,47,1.001,48,0.9,49,1.001,50,0.9,51,1.001,52,0.9,53,1.001,54,0.9,55,1.001,56,0.9,57,1.001,58,1.534,59,1.001,60,0.9,61,1.001,62,0.9,63,1.001,64,0.9,65,1.001,66,0.9,67,1.001,68,0.949,69,1.001,70,0.013,71,0.013,78,0.278,79,0.573,86,1.209,95,1.583,96,1.583,98,1.176,119,2.992,123,2.074,126,4.109,156,1.176,184,3.308,219,4.109,259,3.035,261,2.612,307,3.035,337,2.03,389,3.651,431,3.651,511,3.651,567,3.651,602,2.396,622,2.396,625,2.396,854,2.977,855,4.805,856,4.805,857,4.805,858,4.805,859,5.935,860,4.805,861,4.805,862,3.481,863,3.481,864,3.481,865,3.481,866,4.805,867,4.805,868,4.805,869,4.805,870,4.109]],["title/components/NotfoundComponent.html",[0,0.29,60,0.94]],["body/components/NotfoundComponent.html",[0,0.476,1,1.056,2,1.383,3,0.184,4,0.158,5,1.175,6,1.175,7,1.175,8,0.158,10,1.056,11,2.135,12,1.919,14,1.539,16,1.539,18,0.674,19,0.02,20,0.634,21,1.175,22,0.184,23,0.674,24,4.578,25,1.175,26,1.539,27,1.539,28,1.175,29,1.822,30,1.175,31,0.241,32,1.175,33,1.056,34,1.175,35,1.056,36,1.175,37,1.539,38,1.056,39,1.175,40,1.056,41,1.175,42,1.056,43,1.175,44,1.056,45,1.175,46,1.056,47,1.175,48,1.056,49,1.175,50,1.056,51,1.175,52,1.056,53,1.175,54,1.056,55,1.175,56,1.056,57,1.175,58,1.056,59,1.175,60,1.637,61,1.175,62,1.056,63,1.175,64,1.056,65,1.175,66,1.056,67,1.175,68,1.114,69,1.175,70,0.015,71,0.015,871,3.494,872,6.335,873,5.353,874,5.353]],["title/injectables/OrdersService.html",[118,1.103,466,2.504]],["body/injectables/OrdersService.html",[3,0.203,4,0.174,8,0.174,18,1.031,19,0.021,20,0.698,22,0.203,23,0.742,31,0.257,70,0.016,71,0.016,73,2.143,78,0.359,79,0.679,81,1.321,83,2.713,86,1.373,88,1.637,89,0.453,90,1.637,92,0.988,94,0.679,95,1.293,96,1.293,118,1.727,120,2.143,122,1.439,133,2.627,134,3.57,139,4.326,141,3.095,142,3.095,155,2.143,157,2.143,163,2.285,164,3.096,167,2.015,173,3.096,215,0.835,352,4.869,369,3.845,466,3.92,875,3.845,876,5.694,877,4.497,878,4.497,879,4.497,880,4.497,881,4.497,882,4.497,883,4.497,884,4.497,885,4.497,886,3.845,887,4.497]],["title/interfaces/Product.html",[194,0.497,337,1.536]],["body/interfaces/Product.html",[3,0.179,4,0.153,8,0.153,19,0.021,22,0.294,31,0.237,70,0.015,71,0.015,78,0.316,79,0.626,80,2.115,89,0.508,94,0.891,194,0.89,195,2.004,196,1.269,198,2.34,199,1.339,200,1.773,203,2.148,205,2.102,208,2.36,209,1.339,210,2.36,211,2.179,212,2.36,213,1.339,214,1.339,215,1.162,276,1.675,278,2.015,337,2.645,427,2.015,446,2.317,447,2.504,448,2.853,449,1.89,450,2.504]],["title/interfaces/Product2.html",[194,0.497,448,1.977]],["body/interfaces/Product2.html",[3,0.193,4,0.166,8,0.166,19,0.021,22,0.301,31,0.249,70,0.015,71,0.015,78,0.341,79,0.658,80,1.446,89,0.467,94,0.887,194,0.912,195,1.37,196,1.37,198,2.379,199,1.446,200,1.864,203,2.176,205,1.852,208,1.614,209,2.178,210,1.614,211,2.024,212,1.614,213,1.446,214,1.446,215,0.795,276,2.724,278,2.176,337,2.975,427,2.176,446,2.501,447,2.704,448,3.319,449,2.041,450,2.704]],["title/components/ProductComponent.html",[0,0.29,62,0.94]],["body/components/ProductComponent.html",[0,0.341,1,0.582,2,0.903,3,0.102,4,0.087,5,0.648,6,0.648,7,0.648,8,0.087,10,0.582,11,1.988,12,1.787,14,1.004,16,1.004,18,1.029,19,0.021,20,0.35,21,1.004,22,0.102,23,0.372,25,0.648,26,1.004,27,1.004,28,0.648,29,1.385,30,0.648,31,0.217,32,0.648,33,0.582,34,0.648,35,0.582,36,0.648,37,1.004,38,0.582,39,0.648,40,0.582,41,0.648,42,0.582,43,0.648,44,0.582,45,0.648,46,0.582,47,0.648,48,0.582,49,0.648,50,0.582,51,0.648,52,0.582,53,0.648,54,0.582,55,0.648,56,0.582,57,0.648,58,0.582,59,0.648,60,0.582,61,0.648,62,1.245,63,0.648,64,0.582,65,0.648,66,0.582,67,0.648,68,0.614,69,0.648,70,0.01,71,0.01,78,0.18,79,0.416,81,0.81,82,2.296,86,1.37,88,1.004,89,0.349,90,1.004,92,1.058,93,2.051,94,0.708,95,1.585,96,1.585,98,0.761,100,1.317,122,2.063,123,2.43,156,0.761,201,1.917,215,0.648,217,1.565,218,2.173,237,2.498,238,2.701,240,1.552,241,2.648,242,1.475,244,1.074,245,2.04,259,1.423,260,2.701,261,2.325,265,2.447,280,2.206,282,1.423,285,1.225,320,1.664,337,2.035,342,2.405,390,3.249,394,3.96,395,3.042,396,2.405,398,2.405,408,2.206,410,2.618,411,1.552,412,1.552,413,3.249,414,3.249,415,2.498,416,1.712,417,1.423,418,1.145,424,2.653,425,1.712,426,1.712,427,2.447,428,1.552,429,2.405,430,2.405,431,1.712,709,2.814,710,2.987,712,4.119,715,2.987,739,2.653,751,2.987,754,2.653,762,1.712,763,1.927,765,1.927,766,1.927,770,1.552,778,1.927,782,2.987,783,2.987,784,2.987,785,2.653,786,2.987,787,2.987,788,2.987,789,2.987,790,2.987,791,2.987,792,2.987,793,2.987,794,2.987,795,2.987,888,1.927,889,3.493,890,3.493,891,2.254,892,2.254,893,2.254,894,2.254,895,2.254,896,2.254,897,2.254,898,2.254,899,2.254,900,2.254]],["title/injectables/ProductsService.html",[118,1.103,410,1.977]],["body/injectables/ProductsService.html",[3,0.209,4,0.179,8,0.179,18,1.046,19,0.021,20,0.721,22,0.209,23,0.766,31,0.262,70,0.016,71,0.016,73,2.212,78,0.37,81,1.348,83,2.768,86,1.393,88,1.67,89,0.421,90,1.67,92,1.276,94,0.692,118,1.762,120,2.212,122,1.485,134,3.446,142,3.446,155,2.212,157,2.212,163,2.358,167,2.603,215,0.862,410,3.157,901,3.969,902,6.339,903,5.808,904,4.641,905,4.641,906,4.641,907,4.641,908,4.641,909,4.641,910,4.641,911,4.641,912,4.641,913,4.641,914,4.641]],["title/components/RegisterComponent.html",[0,0.29,64,0.94]],["body/components/RegisterComponent.html",[0,0.293,1,0.462,2,0.751,3,0.081,4,0.069,5,0.514,6,0.514,7,0.514,8,0.069,10,0.462,11,1.911,12,1.718,14,0.835,16,0.835,18,0.767,19,0.021,20,0.277,21,0.835,22,0.081,23,0.295,25,0.514,26,0.835,27,0.835,28,0.514,29,1.215,30,0.514,31,0.268,32,0.514,33,0.462,34,0.514,35,0.462,36,0.514,37,0.835,38,0.462,39,0.514,40,0.462,41,0.514,42,0.462,43,0.514,44,0.462,45,0.514,46,0.462,47,0.514,48,0.462,49,0.514,50,0.462,51,0.514,52,0.462,53,0.514,54,0.462,55,0.514,56,0.462,57,0.514,58,0.462,59,0.514,60,0.462,61,0.514,62,0.462,63,0.514,64,1.092,65,0.514,66,0.462,67,0.514,68,0.487,69,0.514,70,0.008,71,0.008,78,0.142,79,0.346,81,0.674,86,1.243,88,0.514,89,0.337,90,0.514,92,0.638,93,0.637,94,0.346,95,1.51,96,1.51,98,0.603,119,1.995,122,1.81,123,2.132,124,2.526,151,1.23,153,1.357,155,0.851,156,0.603,166,1.128,167,0.801,183,1.23,184,1.23,185,1.528,203,1.511,242,0.755,244,0.851,261,0.971,294,1.044,320,0.851,324,1.357,418,0.908,452,0.971,459,2.526,465,3.138,477,2.526,479,1.528,483,1.23,484,2.91,486,1.528,498,3.138,515,4.261,592,2.206,602,1.23,604,2.206,605,1.044,607,0.971,608,1.357,609,3.533,610,4.82,611,2.788,622,1.23,624,1.357,625,1.23,632,1.357,636,2.206,639,2,646,4.61,648,3.785,651,4.61,653,4.417,655,2.206,656,2.206,657,3.211,658,2.206,660,2.206,664,3.211,665,3.211,666,3.211,669,2,670,2,671,2.206,672,2.91,673,3.785,674,2.206,734,1.23,781,2.206,801,3.614,803,4.261,804,3.138,809,1.528,810,3.138,811,3.138,815,3.614,816,1.528,818,1.528,819,1.528,821,1.528,824,1.357,825,1.528,826,1.528,827,1.528,831,1.528,832,1.528,833,1.528,834,1.528,835,1.528,870,4.261,915,1.528,916,2.904,917,2.904,918,3.67,919,1.787,920,1.787,921,2.904,922,1.787,923,1.787,924,1.787,925,1.787,926,1.787,927,1.787,928,1.787,929,1.787,930,2.904,931,3.67,932,3.67,933,2.904,934,2.904,935,2.904,936,2.904,937,3.67,938,3.67,939,1.787,940,1.787,941,1.787,942,1.787,943,1.787,944,1.787,945,1.787,946,1.787,947,1.787,948,1.787,949,1.787,950,1.787,951,4.226,952,1.787,953,1.787,954,1.787,955,1.787,956,1.787,957,1.787,958,2.904,959,2.904,960,1.787,961,1.787,962,1.787,963,1.787,964,1.787,965,1.787,966,1.787,967,1.787,968,1.787,969,2.904,970,2.904,971,2.904,972,1.787,973,1.787,974,1.787,975,1.787,976,1.787,977,2.904,978,2.904,979,2.904,980,2.904,981,2.904,982,2.904,983,2.904,984,2.904,985,2.904,986,2.904,987,2.904,988,1.787,989,1.787,990,1.787,991,1.787,992,1.787,993,1.787,994,1.787,995,1.787,996,1.787,997,1.787,998,1.787,999,1.787,1000,1.787,1001,1.787,1002,2.904,1003,1.787,1004,1.787,1005,1.787,1006,1.787,1007,1.787]],["title/pipes/SearchPipe.html",[415,2.124,1008,2.297]],["body/pipes/SearchPipe.html",[3,0.227,4,0.195,8,0.195,10,1.302,18,0.832,19,0.021,20,0.782,22,0.227,23,0.832,31,0.297,70,0.017,71,0.017,81,1.169,86,1.107,88,1.449,89,0.365,90,1.449,92,1.107,94,0.728,167,2.259,217,2.259,301,5.225,415,3.569,785,4.642,1008,3.859,1009,3.47,1010,4.31,1011,5.225,1012,5.04,1013,5.04,1014,5.04,1015,5.225,1016,5.04,1017,5.04,1018,5.04,1019,5.04]],["title/interfaces/Subcategory.html",[194,0.497,205,1.103]],["body/interfaces/Subcategory.html",[3,0.193,4,0.166,8,0.166,19,0.021,22,0.301,31,0.301,70,0.015,71,0.015,78,0.341,79,0.658,80,1.446,89,0.467,94,0.896,194,0.912,195,1.37,196,1.37,198,2.379,199,1.446,200,2.254,203,2.073,205,1.956,208,1.614,209,1.446,210,1.614,211,2.136,212,1.614,213,1.446,214,1.446,215,0.795,276,1.809,278,2.176,337,2.579,427,2.176,446,2.501,447,2.704,448,3,449,2.041,450,2.704]],["title/interfaces/Subcategory-1.html",[194,0.416,205,0.923,451,1.777]],["body/interfaces/Subcategory-1.html",[3,0.194,4,0.167,8,0.167,19,0.021,22,0.292,31,0.309,70,0.015,71,0.015,78,0.344,79,0.661,80,1.456,89,0.469,94,0.9,194,0.883,195,1.96,196,1.38,197,2.723,198,2.352,199,1.872,200,2.352,201,1.932,202,2.191,203,2.029,204,2.191,205,1.961,206,2.191,207,2.191,208,1.625,209,1.456,210,1.625,211,2.112,212,1.625,213,1.456,214,1.456,215,0.8]],["title/interfaces/Subcategory-2.html",[194,0.416,205,0.923,452,1.654]],["body/interfaces/Subcategory-2.html",[3,0.194,4,0.167,8,0.167,19,0.021,22,0.292,31,0.302,70,0.015,71,0.015,78,0.344,79,0.661,80,1.456,89,0.469,94,0.897,141,2.344,194,0.883,195,1.38,196,1.38,198,2.312,199,1.456,200,2.312,202,2.191,203,2.112,204,2.191,205,1.961,206,2.191,207,2.191,208,1.625,209,1.456,210,1.625,211,2.139,212,1.625,213,1.456,214,1.456,215,0.8,276,1.821,449,2.055,453,2.723,454,2.344,455,2.968,456,3.238]],["title/pipes/WelcomePipe.html",[1008,2.297,1020,2.763]],["body/pipes/WelcomePipe.html",[3,0.229,4,0.196,8,0.196,10,1.313,18,0.838,19,0.021,20,0.789,22,0.229,23,0.838,31,0.298,70,0.017,71,0.017,81,1.179,86,1.116,88,1.461,89,0.368,90,1.461,92,1.116,94,0.836,96,1.766,217,2.277,779,4.665,1008,3.878,1009,3.498,1011,4.344,1015,5.251,1020,4.665,1021,4.344,1022,6.14,1023,5.08,1024,5.08]],["title/injectables/WhishingService.html",[118,1.103,709,2.124]],["body/injectables/WhishingService.html",[3,0.193,4,0.165,8,0.165,18,1.006,19,0.021,20,0.663,22,0.193,23,0.705,31,0.275,70,0.015,71,0.015,73,2.036,78,0.341,81,1.279,83,2.036,86,1.416,88,1.754,89,0.442,90,1.754,92,1.34,94,0.814,102,2.941,118,1.671,120,2.036,133,2.496,134,3.712,142,3.777,155,2.036,157,2.036,163,2.171,167,2.733,215,1.132,256,3.653,372,3.246,709,3.219,1025,3.653,1026,5.51,1027,5.51,1028,6.444,1029,4.272,1030,5.51,1031,4.272,1032,5.51,1033,4.272,1034,4.272,1035,4.272,1036,5.51,1037,4.272,1038,4.272]],["title/components/WhishlistComponent.html",[0,0.29,66,0.94]],["body/components/WhishlistComponent.html",[0,0.343,1,0.588,2,0.909,3,0.103,4,0.088,5,0.654,6,0.654,7,0.654,8,0.088,10,0.588,11,1.991,12,1.789,14,1.012,16,1.012,18,0.952,19,0.021,20,0.353,21,1.012,22,0.103,23,0.375,25,0.654,26,1.012,27,1.012,28,0.654,29,1.392,30,0.654,31,0.218,32,0.654,33,0.588,34,0.654,35,0.588,36,0.654,37,1.012,38,0.588,39,0.654,40,0.588,41,0.654,42,0.588,43,0.654,44,0.588,45,0.654,46,0.588,47,0.654,48,0.588,49,0.654,50,0.588,51,0.654,52,0.588,53,0.654,54,0.588,55,0.654,56,0.588,57,0.654,58,0.588,59,0.654,60,0.588,61,0.654,62,0.588,63,0.654,64,0.588,65,0.654,66,1.251,67,1.237,68,0.62,69,0.654,70,0.01,71,0.01,78,0.181,79,0.419,81,0.817,82,2.307,86,1.345,88,1.012,89,0.351,90,1.012,92,1.064,93,2.126,94,0.66,95,1.505,96,1.505,100,2.056,122,1.958,123,2.307,156,0.769,209,1.188,215,0.653,217,1.577,218,2.186,237,2.513,238,3.058,241,2.812,242,1.817,244,2.05,245,2.056,259,2.222,260,2.717,265,2.46,280,2.222,282,1.437,285,1.237,307,3.058,314,3.009,319,4.14,320,1.084,332,2.423,342,2.423,343,3.009,349,3.009,350,3.009,395,3.058,396,2.423,398,2.423,408,2.222,417,1.437,428,1.567,429,1.567,430,1.567,451,2.056,454,2.846,605,3.483,701,3.679,705,3.679,709,2.828,724,3.679,725,3.009,726,3.009,727,3.009,728,3.009,729,3.009,730,3.009,731,3.009,732,3.009,733,3.009,734,2.423,754,2.673,756,1.729,757,1.729,758,1.729,762,1.729,770,1.567,1039,1.946,1040,3.519,1041,3.519,1042,4.302,1043,3.519,1044,4.842,1045,2.275,1046,3.519,1047,2.275,1048,2.275,1049,2.275,1050,2.275,1051,2.275,1052,2.275,1053,2.275,1054,2.275,1055,2.275,1056,3.519,1057,2.275,1058,2.275,1059,2.275,1060,3.519,1061,3.519,1062,4.14,1063,3.519,1064,3.519,1065,3.519,1066,3.519,1067,3.519,1068,3.519,1069,3.519,1070,3.519,1071,3.519,1072,3.519,1073,3.519]],["title/coverage.html",[1074,4.235]],["body/coverage.html",[0,0.561,1,0.706,8,0.106,9,2.336,12,0.706,19,0.021,33,0.706,35,0.706,38,0.706,40,0.706,42,0.706,44,0.706,46,0.706,48,0.706,50,0.706,52,0.706,54,0.706,56,0.706,58,0.706,60,0.706,62,0.706,64,0.706,66,0.706,70,0.011,71,0.011,72,2.336,85,1.881,89,0.198,110,2.336,111,2.336,112,3.07,118,1.913,119,1.485,121,2.336,158,2.076,192,2.336,193,2.336,194,0.944,195,0.874,197,3.356,201,1.224,205,1.459,211,1.459,216,2.336,222,1.881,229,1.881,248,2.336,258,2.336,265,1.388,278,1.388,337,1.154,351,2.336,388,2.336,393,1.596,403,1.725,410,1.485,415,1.596,435,2.336,446,3.313,448,1.485,453,3.356,454,1.485,456,1.596,457,2.336,466,1.881,520,2.336,540,2.336,555,2.336,588,2.336,607,1.485,700,2.336,709,1.596,739,5.713,796,2.336,797,2.336,798,2.336,854,2.336,871,2.336,875,2.336,888,2.336,901,2.336,915,2.336,1008,2.552,1010,2.336,1020,2.076,1021,2.336,1025,2.336,1039,2.336,1074,2.336,1075,2.732,1076,2.732,1077,2.732,1078,6.143,1079,3.456,1080,6.958,1081,2.336,1082,7.159,1083,2.336,1084,2.336,1085,2.336,1086,2.336,1087,2.336,1088,2.336,1089,2.336,1090,2.336,1091,2.336,1092,2.336,1093,2.336,1094,2.336,1095,2.336,1096,2.336,1097,2.336,1098,2.336,1099,4.809,1100,5.314,1101,2.732,1102,6.441,1103,4.041,1104,2.732,1105,5.314,1106,4.041,1107,4.041,1108,2.732,1109,2.336,1110,2.336,1111,4.85,1112,2.336,1113,2.336,1114,2.336,1115,2.732,1116,2.732,1117,2.336,1118,2.732,1119,2.732]],["title/dependencies.html",[1120,2.602,1121,3.738]],["body/dependencies.html",[19,0.021,20,0.73,70,0.016,71,0.016,98,1.587,100,3.724,101,3.57,109,3.57,157,2.24,161,4.019,162,3.57,285,2.555,287,5.005,417,2.968,418,2.388,756,3.57,757,3.57,758,3.57,1121,4.019,1122,4.699,1123,7.235,1124,4.699,1125,6.375,1126,4.447,1127,4.699,1128,3.57,1129,4.699,1130,4.019,1131,4.699,1132,4.699,1133,4.699,1134,4.699,1135,4.699,1136,4.019,1137,4.699,1138,4.699,1139,4.699,1140,6.375,1141,4.699,1142,4.699,1143,4.699,1144,4.699,1145,4.699,1146,4.699]],["title/index.html",[78,0.243,1147,3.042,1148,3.042]],["body/index.html",[0,0.477,2,1.058,4,0.158,19,0.015,68,1.116,70,0.015,71,0.015,95,1.542,105,4.073,183,2.819,332,2.819,511,3.111,607,2.226,669,2.819,1009,2.819,1062,3.502,1126,3.111,1128,4.54,1130,3.502,1149,4.095,1150,5.976,1151,4.095,1152,5.361,1153,5.422,1154,5.627,1155,3.502,1156,5.361,1157,4.095,1158,6.581,1159,6.752,1160,6.752,1161,4.095,1162,5.361,1163,4.095,1164,5.361,1165,4.095,1166,4.095,1167,4.095,1168,4.095,1169,4.095,1170,5.361,1171,4.095,1172,4.095,1173,4.095,1174,5.976,1175,4.095,1176,4.095,1177,4.095,1178,4.095,1179,4.095,1180,4.095,1181,5.11,1182,4.095,1183,4.095,1184,4.095,1185,4.095,1186,4.095,1187,4.095,1188,4.095,1189,4.095,1190,4.095,1191,4.095,1192,5.361,1193,5.976,1194,4.095,1195,4.095,1196,4.095,1197,4.095,1198,4.095,1199,4.095,1200,5.976,1201,4.095,1202,5.774,1203,4.095,1204,5.361,1205,4.095,1206,4.095,1207,4.095,1208,4.095,1209,4.095,1210,4.095,1211,4.095,1212,4.095,1213,4.095,1214,4.095,1215,4.095,1216,4.095,1217,4.095,1218,4.095,1219,3.111,1220,4.095,1221,4.095]],["title/modules.html",[1222,4.235]],["body/modules.html",[19,0.019,70,0.019,71,0.019,1222,4.992]],["title/overview.html",[1219,3.762]],["body/overview.html",[2,1.472,19,0.018,70,0.018,71,0.018,120,2.715,196,1.823,452,3.097,672,3.922,1009,3.922,1219,4.328,1223,5.696,1224,5.696]],["title/properties.html",[79,0.521,1120,2.602]],["body/properties.html",[19,0.019,70,0.019,71,0.019,79,0.689,1155,4.946,1225,5.784]],["title/miscellaneous/variables.html",[1226,2.602,1227,3.738]],["body/miscellaneous/variables.html",[12,1.104,19,0.021,70,0.012,71,0.012,78,0.235,89,0.476,95,2.024,96,2.024,139,2.238,153,3.244,158,3.244,166,2.697,167,2.989,171,3.652,173,2.94,182,2.238,215,0.547,237,2.934,241,1.497,307,3.172,395,1.861,408,1.861,605,3.218,607,1.601,708,2.519,748,2.519,761,2.519,770,2.028,771,5.215,824,2.238,886,2.519,1079,2.519,1081,4.295,1083,4.295,1084,2.519,1085,3.652,1086,2.519,1087,3.652,1088,2.519,1089,2.519,1090,3.652,1091,2.519,1092,3.652,1093,2.519,1094,4.295,1095,2.519,1096,4.295,1097,2.519,1098,4.295,1109,2.519,1110,3.652,1111,2.519,1112,3.652,1113,3.652,1114,3.652,1117,3.652,1126,2.238,1128,2.238,1136,2.519,1153,2.519,1154,2.519,1181,2.519,1202,2.519,1226,2.519,1227,2.519,1228,5.848,1229,2.946,1230,2.946,1231,2.946,1232,4.27,1233,2.946,1234,2.946,1235,2.946,1236,2.946,1237,2.946,1238,2.946,1239,2.946,1240,2.946,1241,2.946,1242,2.946,1243,2.946,1244,2.946,1245,2.946,1246,2.946,1247,2.946,1248,4.27,1249,4.27,1250,2.946,1251,2.946,1252,2.946,1253,2.946,1254,2.946,1255,2.946,1256,2.946,1257,2.946,1258,2.946,1259,2.946,1260,4.27,1261,4.27,1262,4.27,1263,2.946,1264,4.27,1265,2.946,1266,2.946,1267,2.946,1268,2.946,1269,2.946,1270,2.946,1271,5.023,1272,5.848,1273,4.27,1274,2.946,1275,2.946,1276,2.946,1277,2.946,1278,2.946,1279,2.946,1280,2.946,1281,2.946,1282,2.946,1283,2.946,1284,2.946,1285,2.946,1286,2.946,1287,2.946,1288,2.946,1289,2.946,1290,2.946,1291,2.946,1292,2.946,1293,2.946]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"components/CheckoutComponent.html":{},"interfaces/Datum.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":739,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1225,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["010",{"_index":979,"title":{},"body":{"components/RegisterComponent.html":{}}}],["011",{"_index":980,"title":{},"body":{"components/RegisterComponent.html":{}}}],["012",{"_index":981,"title":{},"body":{"components/RegisterComponent.html":{}}}],["015",{"_index":982,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1",{"_index":451,"title":{"interfaces/Category-1.html":{},"interfaces/Subcategory-1.html":{}},"body":{"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/WhishlistComponent.html":{}}}],["1/1",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["11.17.2",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["13.0.0",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1224,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1223,"title":{},"body":{"overview.html":{}}}],["19.0.0",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["19.1.0",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["19.1.6",{"_index":1130,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2",{"_index":452,"title":{"interfaces/Category-2.html":{},"interfaces/Subcategory-2.html":{}},"body":{"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["2).join",{"_index":791,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["2.3.0",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":959,"title":{},"body":{"components/RegisterComponent.html":{}}}],["2025",{"_index":584,"title":{},"body":{"components/FooterComponent.html":{}}}],["3",{"_index":639,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["3.1.2",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["3085d6",{"_index":309,"title":{},"body":{"components/CartComponent.html":{}}}],["4",{"_index":743,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.0.0",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":740,"title":{},"body":{"components/HomeComponent.html":{}}}],["5",{"_index":789,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["500",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["6.7.2",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":731,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{}}}],["740",{"_index":741,"title":{},"body":{"components/HomeComponent.html":{}}}],["8",{"_index":672,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["940",{"_index":742,"title":{},"body":{"components/HomeComponent.html":{}}}],["9]{6",{"_index":620,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["9]{8",{"_index":498,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["_",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{}}}],["__v",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/ICart.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-2.html":{}}}],["_id",{"_index":198,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["_self",{"_index":513,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["abstractcontrol",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["account",{"_index":986,"title":{},"body":{"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":462,"title":{},"body":{"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{}}}],["activatedroute=inject",{"_index":530,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activatedroute=inject(activatedroute",{"_index":487,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["actual_component",{"_index":69,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["add",{"_index":1073,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["additional",{"_index":1211,"title":{},"body":{"index.html":{}}}],["addproducttocart",{"_index":353,"title":{},"body":{"injectables/CartService.html":{}}}],["addproducttocart(id",{"_index":359,"title":{},"body":{"injectables/CartService.html":{}}}],["addproducttocart(id:string):observable",{"_index":370,"title":{},"body":{"injectables/CartService.html":{}}}],["addproducttowhishinglist",{"_index":1026,"title":{},"body":{"injectables/WhishingService.html":{}}}],["addproducttowhishinglist(id",{"_index":1030,"title":{},"body":{"injectables/WhishingService.html":{}}}],["address",{"_index":658,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["addtocard",{"_index":396,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["addtocard(id",{"_index":398,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["addtowhishing",{"_index":710,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["addtowhishing(id",{"_index":715,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["allorders",{"_index":13,"title":{},"body":{"components/AllordersComponent.html":{}}}],["allorders'},{'name",{"_index":32,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["allorders.component.html",{"_index":15,"title":{},"body":{"components/AllordersComponent.html":{}}}],["allorders.component.scss",{"_index":17,"title":{},"body":{"components/AllordersComponent.html":{}}}],["allorderscomponent",{"_index":1,"title":{"components/AllordersComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["angular",{"_index":1153,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":285,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"components/LoginComponent.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"injectables/WhishingService.html":{}}}],["angular/compiler",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":418,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":1112,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":33,"title":{"components/AppComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1085,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1164,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr",{"_index":1014,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["arr.filter",{"_index":1018,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["arr:any",{"_index":1016,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["artifacts",{"_index":1185,"title":{},"body":{"index.html":{}}}],["auth",{"_index":36,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["authguard",{"_index":1090,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authlayoutcomponent",{"_index":35,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["authservice",{"_index":119,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["authservice=inject(authservice",{"_index":625,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["automatically",{"_index":1165,"title":{},"body":{"index.html":{}}}],["autoplay",{"_index":736,"title":{},"body":{"components/HomeComponent.html":{}}}],["autoplayhoverpause",{"_index":737,"title":{},"body":{"components/HomeComponent.html":{}}}],["available",{"_index":1177,"title":{},"body":{"index.html":{}}}],["away",{"_index":334,"title":{},"body":{"components/CartComponent.html":{}}}],["baseurl:'https://ecommerce.routemisr.com",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behavior",{"_index":776,"title":{},"body":{"components/HomeComponent.html":{}}}],["best",{"_index":561,"title":{},"body":{"components/FooterComponent.html":{}}}],["blank",{"_index":39,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["blanklayoutcomponent",{"_index":38,"title":{"components/BlankLayoutComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["body",{"_index":384,"title":{},"body":{"injectables/CartService.html":{}}}],["boolean",{"_index":604,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["bootstrap",{"_index":1110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brand",{"_index":195,"title":{"interfaces/Brand.html":{}},"body":{"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"coverage.html":{}}}],["brand._id",{"_index":246,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brand.name",{"_index":247,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brands",{"_index":219,"title":{},"body":{"components/BrandsComponent.html":{},"components/NavbarComponent.html":{}}}],["brands'},{'name",{"_index":41,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["brands.component.html",{"_index":220,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brands.component.scss",{"_index":221,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brandscomponent",{"_index":40,"title":{"components/BrandsComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["brandsservice",{"_index":222,"title":{"injectables/BrandsService.html":{}},"body":{"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"coverage.html":{}}}],["browser",{"_index":1126,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":1113,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":1181,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":1182,"title":{},"body":{"index.html":{}}}],["call",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["callback",{"_index":547,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["callback(flowbite",{"_index":554,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["canactivatefn",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelbuttoncolor",{"_index":310,"title":{},"body":{"components/CartComponent.html":{}}}],["carddetails",{"_index":264,"title":{},"body":{"components/CartComponent.html":{}}}],["carddetails.products",{"_index":338,"title":{},"body":{"components/CartComponent.html":{}}}],["carddetails.totalcartprice",{"_index":329,"title":{},"body":{"components/CartComponent.html":{}}}],["carddetails:icart",{"_index":290,"title":{},"body":{"components/CartComponent.html":{}}}],["carousel",{"_index":757,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{},"dependencies.html":{}}}],["carouselmodule",{"_index":701,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{}}}],["cart",{"_index":259,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/NavbarComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["cart'},{'name",{"_index":43,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["cart.component.html",{"_index":262,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.component.scss",{"_index":263,"title":{},"body":{"components/CartComponent.html":{}}}],["cartcomponent",{"_index":42,"title":{"components/CartComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["cartid",{"_index":463,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cartid:string",{"_index":490,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cartowner",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{}}}],["cartservice",{"_index":265,"title":{"injectables/CartService.html":{}},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["cartservice=inject(cartservice",{"_index":289,"title":{},"body":{"components/CartComponent.html":{}}}],["cash",{"_index":519,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cat",{"_index":432,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["cat._id",{"_index":433,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["cat.name",{"_index":434,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["catcherror((error",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categories",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["categories'},{'name",{"_index":45,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["categories.component.html",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.scss",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categoriescomponent",{"_index":44,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["categoriesservice",{"_index":393,"title":{"injectables/CategoriesService.html":{}},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["category",{"_index":211,"title":{"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"coverage.html":{}}}],["characters",{"_index":673,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["check",{"_index":347,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["checkout",{"_index":458,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout'},{'name",{"_index":47,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["checkout.component.html",{"_index":460,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.component.scss",{"_index":461,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutcomponent",{"_index":46,"title":{"components/CheckoutComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["checkoutform",{"_index":464,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutform!:formgroup",{"_index":489,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutpayment",{"_index":876,"title":{},"body":{"injectables/OrdersService.html":{}}}],["checkoutpayment(id",{"_index":878,"title":{},"body":{"injectables/OrdersService.html":{}}}],["checkoutpayment(id:string",{"_index":881,"title":{},"body":{"injectables/OrdersService.html":{}}}],["choices—just",{"_index":331,"title":{},"body":{"components/CartComponent.html":{}}}],["choose",{"_index":1208,"title":{},"body":{"index.html":{}}}],["city",{"_index":516,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["city:[null,[validators.required",{"_index":499,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["class",{"_index":23,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{}}}],["clear",{"_index":322,"title":{},"body":{"components/CartComponent.html":{}}}],["clearcart",{"_index":354,"title":{},"body":{"injectables/CartService.html":{}}}],["clearcart():observable",{"_index":377,"title":{},"body":{"injectables/CartService.html":{}}}],["cleared",{"_index":326,"title":{},"body":{"components/CartComponent.html":{}}}],["clearitems",{"_index":266,"title":{},"body":{"components/CartComponent.html":{}}}],["clearitems():void",{"_index":321,"title":{},"body":{"components/CartComponent.html":{}}}],["cli",{"_index":1154,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["clone",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ForgetpasswordComponent.html":{},"index.html":{}}}],["come",{"_index":1206,"title":{},"body":{"index.html":{}}}],["command",{"_index":1200,"title":{},"body":{"index.html":{}}}],["compile",{"_index":1183,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1176,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":30,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":1081,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmbuttoncolor",{"_index":308,"title":{},"body":{"components/CartComponent.html":{}}}],["confirmbuttontext",{"_index":312,"title":{},"body":{"components/CartComponent.html":{}}}],["confirmpassword",{"_index":918,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword(group",{"_index":919,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confrmation",{"_index":970,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console",{"_index":283,"title":{},"body":{"components/CartComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{}}}],["console.error('error",{"_index":425,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["console.log('flowbite",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('user",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(err",{"_index":769,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(error",{"_index":242,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["console.log(res",{"_index":244,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["console.log(res.data",{"_index":295,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{}}}],["console.log(this.cartid",{"_index":506,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["console.log(this.productid",{"_index":535,"title":{},"body":{"components/DetailsComponent.html":{}}}],["const",{"_index":771,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WhishingService.html":{}}}],["constructor(@inject(platform_id",{"_index":551,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["constructor(flowbiteservice",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(httpclient",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/WhishingService.html":{}}}],["constructor(httpclint",{"_index":904,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(platformid",{"_index":542,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["constructor(private",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/WhishingService.html":{}}}],["contact",{"_index":568,"title":{},"body":{"components/FooterComponent.html":{}}}],["copy",{"_index":583,"title":{},"body":{"components/FooterComponent.html":{}}}],["core/services/auth/auth.service",{"_index":622,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/brands/brands.service",{"_index":233,"title":{},"body":{"components/BrandsComponent.html":{}}}],["core/services/cart/cart.service",{"_index":282,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["core/services/categories/categories.service",{"_index":419,"title":{},"body":{"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["core/services/flowbite/flowbite.service",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["core/services/orders/orders.service",{"_index":485,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["core/services/products/products.service",{"_index":411,"title":{},"body":{"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["core/services/whishing/whishing.service",{"_index":762,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["count",{"_index":276,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{},"interfaces/Category.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/ICart.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-2.html":{}}}],["coverage",{"_index":1074,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":987,"title":{},"body":{"components/RegisterComponent.html":{}}}],["createdat",{"_index":213,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["createnoderequesthandler(app",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currency",{"_index":342,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["currencypipe",{"_index":260,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["currencypipe,routerlink",{"_index":288,"title":{},"body":{"components/CartComponent.html":{}}}],["custom",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["customer",{"_index":569,"title":{},"body":{"components/FooterComponent.html":{}}}],["custommainslider",{"_index":705,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{}}}],["customoptions",{"_index":706,"title":{},"body":{"components/HomeComponent.html":{}}}],["d33",{"_index":311,"title":{},"body":{"components/CartComponent.html":{}}}],["danger",{"_index":651,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["data",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IWhish.html":{},"injectables/OrdersService.html":{},"interfaces/Subcategory-2.html":{}}}],["data:',this.userdata",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["data:object):observable",{"_index":882,"title":{},"body":{"injectables/OrdersService.html":{}}}],["date",{"_index":746,"title":{},"body":{"components/HomeComponent.html":{}}}],["datepipe",{"_index":759,"title":{},"body":{"components/HomeComponent.html":{}}}],["datum",{"_index":456,"title":{"interfaces/Datum.html":{}},"body":{"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IWhish.html":{},"interfaces/Subcategory-2.html":{},"coverage.html":{}}}],["deals",{"_index":562,"title":{},"body":{"components/FooterComponent.html":{}}}],["decode",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["default",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{}}}],["delet",{"_index":387,"title":{},"body":{"injectables/CartService.html":{}}}],["delete",{"_index":314,"title":{},"body":{"components/CartComponent.html":{},"components/WhishlistComponent.html":{}}}],["deleted",{"_index":318,"title":{},"body":{"components/CartComponent.html":{}}}],["deleteitem",{"_index":1043,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["deleteitem(id",{"_index":1046,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["deleteitemfromwhishinglist",{"_index":1027,"title":{},"body":{"injectables/WhishingService.html":{}}}],["deleteitemfromwhishinglist(id",{"_index":1032,"title":{},"body":{"injectables/WhishingService.html":{}}}],["dependencies",{"_index":1121,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":207,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["detailed",{"_index":1216,"title":{},"body":{"index.html":{}}}],["details",{"_index":514,"title":{},"body":{"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{}}}],["details'},{'name",{"_index":49,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["details.component.html",{"_index":521,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":522,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details:[null,[validators.required",{"_index":495,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["detailscomponent",{"_index":48,"title":{"components/DetailsComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["dev",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":1156,"title":{},"body":{"index.html":{}}}],["digits",{"_index":984,"title":{},"body":{"components/RegisterComponent.html":{}}}],["direct",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directive",{"_index":28,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["directives",{"_index":68,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"index.html":{}}}],["directory",{"_index":1187,"title":{},"body":{"index.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":1186,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('targetsection",{"_index":772,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["don't",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dots",{"_index":729,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{}}}],["dream",{"_index":1063,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["during",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":978,"title":{},"body":{"components/RegisterComponent.html":{}}}],["e2e",{"_index":1203,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1205,"title":{},"body":{"index.html":{}}}],["ecom",{"_index":1149,"title":{},"body":{"index.html":{}}}],["ecomrc",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["egyptian",{"_index":977,"title":{},"body":{"components/RegisterComponent.html":{}}}],["element",{"_index":27,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["element.offsettop",{"_index":775,"title":{},"body":{"components/HomeComponent.html":{}}}],["email",{"_index":648,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["email:[null",{"_index":933,"title":{},"body":{"components/RegisterComponent.html":{}}}],["email:new",{"_index":608,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emailvalue=this.verifyemail.get('email')?.value",{"_index":630,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["empty",{"_index":350,"title":{},"body":{"components/CartComponent.html":{},"components/WhishlistComponent.html":{}}}],["end",{"_index":1202,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":664,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["enter",{"_index":656,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["environment",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["err",{"_index":424,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["error",{"_index":241,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["error.error.message",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error:(error",{"_index":297,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetpasswordComponent.html":{}}}],["error:(error:httperrorresponse",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errorsinterceptor",{"_index":1094,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eur",{"_index":794,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["eventcoalescing",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":1159,"title":{},"body":{"index.html":{}}}],["exceed",{"_index":958,"title":{},"body":{"components/RegisterComponent.html":{}}}],["execute",{"_index":1194,"title":{},"body":{"index.html":{}}}],["export",{"_index":22,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"components/CheckoutComponent.html":{},"interfaces/Datum.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{}}}],["express",{"_index":1136,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["facebook",{"_index":580,"title":{},"body":{"components/FooterComponent.html":{}}}],["false",{"_index":605,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["faqs",{"_index":571,"title":{},"body":{"components/FooterComponent.html":{}}}],["fashion",{"_index":780,"title":{},"body":{"components/HomeComponent.html":{}}}],["fetching",{"_index":426,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"components/CheckoutComponent.html":{},"interfaces/Datum.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["files",{"_index":1169,"title":{},"body":{"index.html":{}}}],["finalize",{"_index":761,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["flowbite",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/FlowbiteService.html":{},"dependencies.html":{}}}],["flowbiteservice",{"_index":85,"title":{"injectables/FlowbiteService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FlowbiteService.html":{},"coverage.html":{}}}],["followed",{"_index":983,"title":{},"body":{"components/RegisterComponent.html":{}}}],["following",{"_index":1199,"title":{},"body":{"index.html":{}}}],["footer",{"_index":556,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":51,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["footer.component.html",{"_index":557,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":558,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":116,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["footercomponent",{"_index":50,"title":{"components/FooterComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["forget",{"_index":645,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["forgetpassword",{"_index":589,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["forgetpassword'},{'name",{"_index":53,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["forgetpassword.component.html",{"_index":590,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["forgetpassword.component.scss",{"_index":591,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["forgetpasswordcomponent",{"_index":52,"title":{"components/ForgetpasswordComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":465,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["formbuilder=inject(formbuilder",{"_index":486,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":483,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol(null",{"_index":609,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":477,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["fortawesome/fontawesome",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["framework",{"_index":1207,"title":{},"body":{"index.html":{}}}],["free",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["fresh",{"_index":431,"title":{},"body":{"components/CategoriesComponent.html":{},"components/NavbarComponent.html":{},"components/ProductComponent.html":{}}}],["freshcard",{"_index":559,"title":{},"body":{"components/FooterComponent.html":{}}}],["freshcart",{"_index":770,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":548,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["gbp",{"_index":343,"title":{},"body":{"components/CartComponent.html":{},"components/WhishlistComponent.html":{}}}],["generate",{"_index":1174,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1151,"title":{},"body":{"index.html":{}}}],["getallbrands",{"_index":249,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getallcategories",{"_index":436,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getallcategories():observable",{"_index":442,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getallproducts",{"_index":902,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getallproducts():observable",{"_index":911,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getbrandetails",{"_index":223,"title":{},"body":{"components/BrandsComponent.html":{}}}],["getbrandetails(id",{"_index":225,"title":{},"body":{"components/BrandsComponent.html":{}}}],["getbrands",{"_index":224,"title":{},"body":{"components/BrandsComponent.html":{}}}],["getbrandsdetails",{"_index":250,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getbrandsdetails(id",{"_index":253,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getcartdata",{"_index":267,"title":{},"body":{"components/CartComponent.html":{}}}],["getcartdata():void",{"_index":292,"title":{},"body":{"components/CartComponent.html":{}}}],["getcartid",{"_index":467,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["getcartid():void",{"_index":500,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["getcategoriesdata",{"_index":711,"title":{},"body":{"components/HomeComponent.html":{}}}],["getcategoriesdetails",{"_index":437,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategoriesdetails(id",{"_index":440,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategoriesdetails(id:string):observable",{"_index":444,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategorydata",{"_index":397,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["getloggedusercart",{"_index":355,"title":{},"body":{"injectables/CartService.html":{}}}],["getloggedusercart():observable",{"_index":373,"title":{},"body":{"injectables/CartService.html":{}}}],["getproductsdata",{"_index":712,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["getspecificproduct",{"_index":903,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getspecificproduct(id",{"_index":908,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getspecificproduct(id:string):observable",{"_index":913,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getting",{"_index":1147,"title":{"index.html":{}},"body":{}}],["getwhishingitems",{"_index":1044,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["getwhishinglistitems",{"_index":1028,"title":{},"body":{"injectables/WhishingService.html":{}}}],["group",{"_index":921,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hamada",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["handler",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":386,"title":{},"body":{"injectables/CartService.html":{}}}],["headers",{"_index":886,"title":{},"body":{"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["headersinterceptor",{"_index":1096,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["helpbuilding",{"_index":1180,"title":{},"body":{"index.html":{}}}],["here",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["hideloading",{"_index":768,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":567,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":55,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["home.component.html",{"_index":703,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":704,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":54,"title":{"components/HomeComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["html",{"_index":26,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["http://localhost:4200",{"_index":1163,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WhishingService.html":{}}}],["httpclient:httpclient",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{}}}],["httpclint",{"_index":906,"title":{},"body":{"injectables/ProductsService.html":{}}}],["httpclint:httpclient",{"_index":910,"title":{},"body":{"injectables/ProductsService.html":{}}}],["httperrorresponse",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["httpinterceptorfn",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://ecommerce.routemisr.com/api/v1/brands/${id",{"_index":257,"title":{},"body":{"injectables/BrandsService.html":{}}}],["https://ecommerce.routemisr.com/api/v1/wishlist",{"_index":1036,"title":{},"body":{"injectables/WhishingService.html":{}}}],["https://ecommerce.routemisr.com/api/v1/wishlist/${id",{"_index":1038,"title":{},"body":{"injectables/WhishingService.html":{}}}],["ibrands",{"_index":229,"title":{"interfaces/IBrands.html":{}},"body":{"components/BrandsComponent.html":{},"interfaces/IBrands.html":{},"coverage.html":{}}}],["icart",{"_index":278,"title":{"interfaces/ICart.html":{}},"body":{"components/CartComponent.html":{},"interfaces/Category.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"coverage.html":{}}}],["icategories",{"_index":403,"title":{"interfaces/ICategories.html":{}},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"interfaces/ICategories.html":{},"coverage.html":{}}}],["icon",{"_index":304,"title":{},"body":{"components/CartComponent.html":{}}}],["id",{"_index":215,"title":{},"body":{"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"components/HomeComponent.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["id=inject(platform_id",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["if(!islogin",{"_index":869,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(isloading",{"_index":660,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(islogin",{"_index":868,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(isplatformbrowser(id",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(localstorage.getitem('usertoken",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["if(loginform.get('email')?.errors",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get('password')?.errors",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get('password')?.geterror('required",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'email\\')?.errors",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'password\\')?.errors",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'password\\')?.geterror(\\'required",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(register.get('email')?.errors",{"_index":960,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.get('name')?.geterror('required",{"_index":955,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.get('password')?.errors",{"_index":964,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.get('password')?.geterror('required",{"_index":966,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.get('phone')?.geterror('required",{"_index":975,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.get('repassword')?.geterror('required",{"_index":972,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.get(\\'email\\')?.errors",{"_index":993,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.get(\\'name\\')?.geterror(\\'required",{"_index":990,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.get(\\'password\\')?.errors",{"_index":997,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.get(\\'password\\')?.geterror(\\'required",{"_index":999,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.get(\\'phone\\')?.geterror(\\'required",{"_index":1006,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.get(\\'repassword\\')?.geterror(\\'required",{"_index":1003,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.geterror('mismatch",{"_index":968,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.geterror(\\'mismatch",{"_index":1001,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(res.message",{"_index":324,"title":{},"body":{"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(res.status",{"_index":510,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgetpasswordComponent.html":{}}}],["if(res.statusmsg",{"_index":634,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(resetpassword.get('email')?.errors",{"_index":675,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(resetpassword.get('password')?.errors",{"_index":679,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(resetpassword.get('password')?.geterror('required",{"_index":681,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(resetpassword.get(\\'email\\')?.errors",{"_index":692,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(resetpassword.get(\\'password\\')?.errors",{"_index":696,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(resetpassword.get(\\'password\\')?.geterror(\\'required",{"_index":698,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(step",{"_index":647,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(this.loginform.valid",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.register.valid",{"_index":946,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(verifyemail.get('email')?.errors",{"_index":649,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(verifyemail.get(\\'email\\')?.errors",{"_index":684,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(verifytcode.get('password')?.errors",{"_index":662,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(verifytcode.get('password')?.geterror('required",{"_index":667,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(verifytcode.get(\\'password\\')?.errors",{"_index":688,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(verifytcode.get(\\'password\\')?.geterror(\\'required",{"_index":690,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["if(whishitems.count",{"_index":1060,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["image",{"_index":199,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["imagecover",{"_index":210,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["images",{"_index":204,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["implements",{"_index":217,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{},"components/WhishlistComponent.html":{}}}],["import",{"_index":18,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{}}}],["import('flowbite').then(flowbite",{"_index":553,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["importprovidersfrom(ngxspinnermodule",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":21,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["includes",{"_index":1171,"title":{},"body":{"index.html":{}}}],["including",{"_index":1215,"title":{},"body":{"index.html":{}}}],["incoreect",{"_index":971,"title":{},"body":{"components/RegisterComponent.html":{}}}],["index",{"_index":78,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"components/CheckoutComponent.html":{},"interfaces/Datum.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"components/CheckoutComponent.html":{},"interfaces/Datum.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{}}}],["information",{"_index":1214,"title":{},"body":{"index.html":{}}}],["initform",{"_index":468,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["initform():void",{"_index":493,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["inject",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["inject(activatedroute",{"_index":474,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["inject(authservice",{"_index":602,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["inject(brandsservice",{"_index":231,"title":{},"body":{"components/BrandsComponent.html":{}}}],["inject(cartservice",{"_index":280,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["inject(categoriesservice",{"_index":405,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["inject(formbuilder",{"_index":479,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["inject(ngxspinnerservice",{"_index":748,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(ordersservice",{"_index":481,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["inject(platform_id",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(productsservice",{"_index":751,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["inject(router",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inject(toastrservice",{"_index":408,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(whishingservice",{"_index":754,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["injectable",{"_index":118,"title":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WhishingService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WhishingService.html":{},"coverage.html":{}}}],["injectables",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WhishingService.html":{},"overview.html":{}}}],["input",{"_index":863,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inputs",{"_index":860,"title":{},"body":{"components/NavbarComponent.html":{}}}],["instagram",{"_index":581,"title":{},"body":{"components/FooterComponent.html":{}}}],["interface",{"_index":194,"title":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"coverage.html":{}}}],["interfaces",{"_index":196,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"overview.html":{}}}],["iproduct",{"_index":201,"title":{"interfaces/IProduct.html":{}},"body":{"interfaces/Brand.html":{},"components/CategoriesComponent.html":{},"interfaces/Category-1.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProduct.html":{},"components/ProductComponent.html":{},"interfaces/Subcategory-1.html":{},"coverage.html":{}}}],["isloading",{"_index":592,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isloading:boolean=false",{"_index":624,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["islogin",{"_index":859,"title":{},"body":{"components/NavbarComponent.html":{}}}],["islogin=input(true",{"_index":865,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isplatformbrowser",{"_index":549,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":552,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["issuccess",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["issuccess:string",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["item",{"_index":319,"title":{},"body":{"components/CartComponent.html":{},"components/WhishlistComponent.html":{}}}],["item)=>item.title.tolowercase().includes(text.tolowercase",{"_index":1019,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["item._id",{"_index":1069,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["item.description",{"_index":1072,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["item.price",{"_index":1071,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["item.title",{"_index":1070,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["items",{"_index":733,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{}}}],["iwhish",{"_index":454,"title":{"interfaces/IWhish.html":{}},"body":{"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IWhish.html":{},"interfaces/Subcategory-2.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["jsonpipe",{"_index":760,"title":{},"body":{"components/HomeComponent.html":{}}}],["jwt",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":1195,"title":{},"body":{"index.html":{}}}],["latest",{"_index":563,"title":{},"body":{"components/FooterComponent.html":{}}}],["layout",{"_index":113,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["layout'},{'name",{"_index":37,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["layout.component.html",{"_index":114,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["layout.component.scss",{"_index":115,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["layout.component.ts",{"_index":112,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"coverage.html":{}}}],["layout/auth",{"_index":111,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["layout/blank",{"_index":193,"title":{},"body":{"components/BlankLayoutComponent.html":{},"coverage.html":{}}}],["legend",{"_index":25,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["letter",{"_index":671,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["links",{"_index":566,"title":{},"body":{"components/FooterComponent.html":{}}}],["list",{"_index":1062,"title":{},"body":{"components/WhishlistComponent.html":{},"index.html":{}}}],["loaded",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["loadflowbite",{"_index":541,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["loadflowbite(callback",{"_index":545,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["loadinginterceptor",{"_index":1098,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1157,"title":{},"body":{"index.html":{}}}],["localstorage.getitem('usertoken",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["localstorage.removeitem('usertoken",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(\"usertoken\",res.token",{"_index":642,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["localstorage.setitem('usertoken",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["logedguard",{"_index":1092,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["login'},{'name",{"_index":57,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["login.component.html",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":56,"title":{"components/LoginComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('email')?.geterror('email",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('email')?.geterror('required",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('email')?.touched",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('password')?.geterror('pattern",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('password')?.touched",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'email\\')?.geterror(\\'email",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'email\\')?.geterror(\\'required",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'email\\')?.touched",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'password\\')?.geterror(\\'pattern",{"_index":853,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'password\\')?.touched",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform:formgroup",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logout():void",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":674,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["loop",{"_index":725,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{}}}],["main",{"_index":866,"title":{},"body":{"components/NavbarComponent.html":{}}}],["making",{"_index":335,"title":{},"body":{"components/CartComponent.html":{}}}],["matching",{"_index":71,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"components/CheckoutComponent.html":{},"interfaces/Datum.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":867,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["met",{"_index":666,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{},"components/WhishlistComponent.html":{}}}],["methods",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/OrdersService.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{}}}],["miscellaneous",{"_index":1226,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mismatch",{"_index":922,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mismatch:true",{"_index":952,"title":{},"body":{"components/RegisterComponent.html":{}}}],["modify",{"_index":1168,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1222,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1213,"title":{},"body":{"index.html":{}}}],["mousedrag",{"_index":726,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{}}}],["msgerror",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["msgerror:string",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["mydate",{"_index":707,"title":{},"body":{"components/HomeComponent.html":{}}}],["mytoken",{"_index":352,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{}}}],["mytoken:any=localstorage.getitem('usertoken",{"_index":369,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"components/CheckoutComponent.html":{},"interfaces/Datum.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{}}}],["name:[null",{"_index":930,"title":{},"body":{"components/RegisterComponent.html":{}}}],["name:new",{"_index":943,"title":{},"body":{"components/RegisterComponent.html":{}}}],["namefor",{"_index":1175,"title":{},"body":{"index.html":{}}}],["nav",{"_index":734,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["navbar",{"_index":855,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":59,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["navbar.component.html",{"_index":857,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":858,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":117,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["navbarcomponent",{"_index":58,"title":{"components/NavbarComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["navspeed",{"_index":730,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{}}}],["navtext",{"_index":732,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{}}}],["needs",{"_index":1210,"title":{},"body":{"index.html":{}}}],["new",{"_index":607,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcount",{"_index":366,"title":{},"body":{"injectables/CartService.html":{}}}],["newpassword",{"_index":612,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["newsletter",{"_index":578,"title":{},"body":{"components/FooterComponent.html":{}}}],["next",{"_index":237,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["next(req",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next:(param",{"_index":502,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["next:(res",{"_index":294,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ng",{"_index":1160,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["ngx",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{},"dependencies.html":{}}}],["ngxspinnercomponent",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["ngxspinnerservice",{"_index":708,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxspinnerservice.hide",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxspinnerservice.show",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfound",{"_index":872,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound'},{'name",{"_index":61,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["notfound.component.html",{"_index":873,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound.component.scss",{"_index":874,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfoundcomponent",{"_index":60,"title":{"components/NotfoundComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["now",{"_index":781,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["null",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":203,"title":{},"body":{"interfaces/Brand.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"components/ForgetpasswordComponent.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/RegisterComponent.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["o",{"_index":758,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{},"dependencies.html":{}}}],["object",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WhishingService.html":{}}}],["one",{"_index":332,"title":{},"body":{"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/WhishlistComponent.html":{},"index.html":{}}}],["oninit",{"_index":218,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["online",{"_index":517,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["oops",{"_index":349,"title":{},"body":{"components/CartComponent.html":{},"components/WhishlistComponent.html":{}}}],["open",{"_index":511,"title":{},"body":{"components/CheckoutComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["optimizes",{"_index":1189,"title":{},"body":{"index.html":{}}}],["optional",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"injectables/OrdersService.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{}}}],["options",{"_index":385,"title":{},"body":{"injectables/CartService.html":{}}}],["ordersservice",{"_index":466,"title":{"injectables/OrdersService.html":{}},"body":{"components/CheckoutComponent.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["ordersservice=inject(ordersservice",{"_index":488,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["out",{"_index":348,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["overview",{"_index":1219,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owl",{"_index":756,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{},"dependencies.html":{}}}],["owloptions",{"_index":724,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{}}}],["package",{"_index":1120,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1221,"title":{},"body":{"index.html":{}}}],["param.get('id",{"_index":504,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["parameters",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"injectables/OrdersService.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{}}}],["password",{"_index":646,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["password:[null",{"_index":934,"title":{},"body":{"components/RegisterComponent.html":{}}}],["password:new",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["password=group.get('password')?.value",{"_index":949,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["payment",{"_index":518,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["perfect",{"_index":1065,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["performance",{"_index":1190,"title":{},"body":{"index.html":{}}}],["phone",{"_index":515,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["phone:[null",{"_index":936,"title":{},"body":{"components/RegisterComponent.html":{}}}],["phone:[null,[validators.required",{"_index":496,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["phone:new",{"_index":945,"title":{},"body":{"components/RegisterComponent.html":{}}}],["picks",{"_index":1066,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["pipe",{"_index":1008,"title":{"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{}},"body":{"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{},"coverage.html":{}}}],["pipes",{"_index":1009,"title":{},"body":{"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{},"index.html":{},"overview.html":{}}}],["pipetransform",{"_index":1015,"title":{},"body":{"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{}}}],["place",{"_index":1067,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["platform_id",{"_index":550,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["platformid",{"_index":544,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["please",{"_index":655,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["policy",{"_index":574,"title":{},"body":{"components/FooterComponent.html":{}}}],["popular",{"_index":782,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["post",{"_index":381,"title":{},"body":{"injectables/CartService.html":{}}}],["powerful",{"_index":1172,"title":{},"body":{"index.html":{}}}],["price",{"_index":209,"title":{},"body":{"interfaces/Brand.html":{},"components/CartComponent.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"components/WhishlistComponent.html":{}}}],["prise",{"_index":346,"title":{},"body":{"components/CartComponent.html":{}}}],["privacy",{"_index":573,"title":{},"body":{"components/FooterComponent.html":{}}}],["private",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/OrdersService.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["prod",{"_index":783,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["prod.category.name",{"_index":787,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["prod.id",{"_index":786,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["prod.price",{"_index":793,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["prod.ratingsaverage",{"_index":795,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["prod.title.split",{"_index":790,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["product",{"_index":337,"title":{"interfaces/Product.html":{}},"body":{"components/CartComponent.html":{},"interfaces/Category.html":{},"components/HomeComponent.html":{},"interfaces/ICart.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"interfaces/Subcategory.html":{},"coverage.html":{}}}],["product'},{'name",{"_index":63,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["product.component.html",{"_index":889,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.component.scss",{"_index":890,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.count",{"_index":344,"title":{},"body":{"components/CartComponent.html":{}}}],["product.price",{"_index":341,"title":{},"body":{"components/CartComponent.html":{}}}],["product.product.id",{"_index":339,"title":{},"body":{"components/CartComponent.html":{}}}],["product.product.title",{"_index":340,"title":{},"body":{"components/CartComponent.html":{}}}],["product/product.component",{"_index":529,"title":{},"body":{"components/DetailsComponent.html":{}}}],["product2",{"_index":448,"title":{"interfaces/Product2.html":{}},"body":{"interfaces/Category.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"coverage.html":{}}}],["productcomponent",{"_index":62,"title":{"components/ProductComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["productdetails",{"_index":523,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productdetails.description",{"_index":539,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productdetails.title",{"_index":538,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productdetails:iproduct",{"_index":533,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productid",{"_index":372,"title":{},"body":{"injectables/CartService.html":{},"components/DetailsComponent.html":{},"injectables/WhishingService.html":{}}}],["productid:any",{"_index":532,"title":{},"body":{"components/DetailsComponent.html":{}}}],["production",{"_index":1188,"title":{},"body":{"index.html":{}}}],["products",{"_index":427,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/HomeComponent.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"interfaces/Subcategory.html":{}}}],["products.slice(0,12",{"_index":784,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["productsservice",{"_index":410,"title":{"injectables/ProductsService.html":{}},"body":{"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productsservice=inject",{"_index":531,"title":{},"body":{"components/DetailsComponent.html":{}}}],["programming",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["project",{"_index":1150,"title":{},"body":{"index.html":{}}}],["properties",{"_index":79,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"components/CheckoutComponent.html":{},"interfaces/Datum.html":{},"components/DetailsComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"components/WhishlistComponent.html":{},"properties.html":{}}}],["provideanimations",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WhishingService.html":{}}}],["providehttpclient",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetoastr",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pulldrag",{"_index":728,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{}}}],["put",{"_index":382,"title":{},"body":{"injectables/CartService.html":{}}}],["quantity",{"_index":208,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["quick",{"_index":565,"title":{},"body":{"components/FooterComponent.html":{}}}],["ratingsaverage",{"_index":212,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["ratingsquantity",{"_index":206,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["reactiveformsmodule",{"_index":459,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reactiveformsmodule,routerlink",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["readonly",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["reference",{"_index":1220,"title":{},"body":{"index.html":{}}}],["references",{"_index":1217,"title":{},"body":{"index.html":{}}}],["register",{"_index":870,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":65,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["register.component.html",{"_index":916,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":917,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('email')?.geterror('email",{"_index":963,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('email')?.geterror('required",{"_index":962,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('email')?.touched",{"_index":961,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('name')?.errors",{"_index":953,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('name')?.geterror('maxlength",{"_index":957,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('name')?.geterror('minlength",{"_index":956,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('name')?.touched",{"_index":954,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('password')?.geterror('pattern",{"_index":967,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('password')?.touched",{"_index":965,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('phone')?.errors",{"_index":973,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('phone')?.geterror('pattern",{"_index":976,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('phone')?.touched",{"_index":974,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('repassword')?.touched",{"_index":969,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'email\\')?.geterror(\\'email",{"_index":996,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'email\\')?.geterror(\\'required",{"_index":995,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'email\\')?.touched",{"_index":994,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'name\\')?.errors",{"_index":988,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'name\\')?.geterror(\\'maxlength",{"_index":992,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'name\\')?.geterror(\\'minlength",{"_index":991,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'name\\')?.touched",{"_index":989,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'password\\')?.geterror(\\'pattern",{"_index":1000,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'password\\')?.touched",{"_index":998,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'phone\\')?.errors",{"_index":1004,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'phone\\')?.geterror(\\'pattern",{"_index":1007,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'phone\\')?.touched",{"_index":1005,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'repassword\\')?.touched",{"_index":1002,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register:formgroup",{"_index":942,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register:formgroup=this.formbuilder.group",{"_index":941,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":64,"title":{"components/RegisterComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["reload",{"_index":1166,"title":{},"body":{"index.html":{}}}],["remove",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{}}}],["removeitem",{"_index":268,"title":{},"body":{"components/CartComponent.html":{}}}],["removeitem(id",{"_index":273,"title":{},"body":{"components/CartComponent.html":{}}}],["removeitem(id:string):void",{"_index":298,"title":{},"body":{"components/CartComponent.html":{}}}],["removespecificcartitem",{"_index":356,"title":{},"body":{"injectables/CartService.html":{}}}],["removespecificcartitem(id",{"_index":363,"title":{},"body":{"injectables/CartService.html":{}}}],["removespecificcartitem(id:string):observable",{"_index":375,"title":{},"body":{"injectables/CartService.html":{}}}],["rendermode",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repassword",{"_index":951,"title":{},"body":{"components/RegisterComponent.html":{}}}],["repassword:[null",{"_index":935,"title":{},"body":{"components/RegisterComponent.html":{}}}],["repassword:new",{"_index":944,"title":{},"body":{"components/RegisterComponent.html":{}}}],["repassword=group.get('repassword')?.value",{"_index":950,"title":{},"body":{"components/RegisterComponent.html":{}}}],["req",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reqhandler",{"_index":1114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":653,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["requirements",{"_index":665,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["requist",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":238,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["res.data",{"_index":240,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["res.session.url",{"_index":512,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["res.status",{"_index":429,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["res.token",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{}}}],["reserved",{"_index":587,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":683,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetcode",{"_index":661,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetcode:new",{"_index":618,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpassword",{"_index":593,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpassword.get('email')?.geterror('email",{"_index":678,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpassword.get('email')?.geterror('required",{"_index":677,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpassword.get('email')?.touched",{"_index":676,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpassword.get('password')?.geterror('pattern",{"_index":682,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpassword.get('password')?.touched",{"_index":680,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpassword.get(\\'email\\')?.geterror(\\'email",{"_index":695,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpassword.get(\\'email\\')?.geterror(\\'required",{"_index":694,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpassword.get(\\'email\\')?.touched",{"_index":693,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpassword.get(\\'password\\')?.geterror(\\'pattern",{"_index":699,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpassword.get(\\'password\\')?.touched",{"_index":697,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpassword:formgroup",{"_index":628,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpasswordsubmit",{"_index":596,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resetpasswordsubmit():void",{"_index":640,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["resolve(serverdistfolder",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":1212,"title":{},"body":{"index.html":{}}}],["responsive",{"_index":738,"title":{},"body":{"components/HomeComponent.html":{}}}],["result.isconfirmed",{"_index":316,"title":{},"body":{"components/CartComponent.html":{}}}],["results",{"_index":70,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"components/CheckoutComponent.html":{},"interfaces/Datum.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/WhishingService.html":{},"miscellaneous/variables.html":{}}}],["return`welcome",{"_index":1024,"title":{},"body":{"pipes/WelcomePipe.html":{}}}],["returns",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/OrdersService.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{}}}],["revert",{"_index":303,"title":{},"body":{"components/CartComponent.html":{}}}],["rights",{"_index":586,"title":{},"body":{"components/FooterComponent.html":{}}}],["root",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WhishingService.html":{}}}],["root'},{'name",{"_index":34,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["route",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["router.navigate(['/home",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router=inject(router",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["routerlink",{"_index":261,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{}}}],["routerlink,routerlinkactive",{"_index":864,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlinkactive",{"_index":856,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routeroutlet",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["routing",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["run",{"_index":1158,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1197,"title":{},"body":{"index.html":{}}}],["running",{"_index":1162,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"components/HomeComponent.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WhishingService.html":{},"dependencies.html":{}}}],["save",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["saveuserdata",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveuserdata():void",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":1170,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1178,"title":{},"body":{"index.html":{}}}],["scrolltosection",{"_index":713,"title":{},"body":{"components/HomeComponent.html":{}}}],["search",{"_index":785,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{},"pipes/SearchPipe.html":{}}}],["searchpipe",{"_index":415,"title":{"pipes/SearchPipe.html":{}},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"pipes/SearchPipe.html":{},"coverage.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["send",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sendlogginform",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendlogginform(data",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendregisterform",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendregisterform(data",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["serveonce",{"_index":1161,"title":{},"body":{"index.html":{}}}],["server",{"_index":1128,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":1083,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":1087,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":576,"title":{},"body":{"components/FooterComponent.html":{}}}],["session/${id}?url=http://localhost:4200",{"_index":884,"title":{},"body":{"injectables/OrdersService.html":{}}}],["setcodeverify",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["setcodeverify(data",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["setcodeverify(data:object):observable",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["setemailverify",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["setemailverify(data",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["setemailverify(data:object):observable",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["setheaders",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setresetpassword",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["setresetpassword(data",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["setresetpassword(data:object):observable",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["shared/interfaces/ibrands",{"_index":234,"title":{},"body":{"components/BrandsComponent.html":{}}}],["shared/interfaces/icart",{"_index":284,"title":{},"body":{"components/CartComponent.html":{}}}],["shared/interfaces/icategories",{"_index":420,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["shared/interfaces/iproduct",{"_index":412,"title":{},"body":{"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["shared/interfaces/iwhish",{"_index":1055,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["shared/pipes/search/search.pipe",{"_index":416,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["shipping",{"_index":572,"title":{},"body":{"components/FooterComponent.html":{}}}],["shippingaddress\":data",{"_index":885,"title":{},"body":{"injectables/OrdersService.html":{}}}],["shop",{"_index":330,"title":{},"body":{"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["shopease",{"_index":585,"title":{},"body":{"components/FooterComponent.html":{}}}],["showcancelbutton",{"_index":306,"title":{},"body":{"components/CartComponent.html":{}}}],["showloading",{"_index":767,"title":{},"body":{"components/HomeComponent.html":{}}}],["signin",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["signup",{"_index":985,"title":{},"body":{"components/RegisterComponent.html":{}}}],["slice",{"_index":788,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["slicepipe",{"_index":413,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["slug",{"_index":200,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["smooth",{"_index":777,"title":{},"body":{"components/HomeComponent.html":{}}}],["sold",{"_index":202,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"components/CheckoutComponent.html":{},"interfaces/Datum.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{},"index.html":{}}}],["speed",{"_index":1191,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["src/.../app.config.server.ts",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../errors.interceptor.ts",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../headers.interceptor.ts",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../loading.interceptor.ts",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../loged.guard.ts",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1079,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1084,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":1086,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/environments/environment.ts",{"_index":1088,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth/auth.guard.ts",{"_index":1089,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/loged/loged.guard.ts",{"_index":1091,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/errors/errors.interceptor.ts",{"_index":1093,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/headers/headers.interceptor.ts",{"_index":1095,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/loading/loading.interceptor.ts",{"_index":1097,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/auth/auth.service.ts",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth/auth.service.ts:11",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:15",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:16",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:18",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:23",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:29",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:38",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:46",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:50",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:54",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/brands/brands.service.ts",{"_index":248,"title":{},"body":{"injectables/BrandsService.html":{},"coverage.html":{}}}],["src/app/core/services/brands/brands.service.ts:11",{"_index":252,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/app/core/services/brands/brands.service.ts:15",{"_index":254,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/app/core/services/brands/brands.service.ts:8",{"_index":251,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/app/core/services/cart/cart.service.ts",{"_index":351,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["src/app/core/services/cart/cart.service.ts:12",{"_index":368,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:14",{"_index":360,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:21",{"_index":362,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:26",{"_index":364,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:30",{"_index":361,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:34",{"_index":367,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:8",{"_index":358,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/categories/categories.service.ts",{"_index":435,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/app/core/services/categories/categories.service.ts:12",{"_index":439,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/categories/categories.service.ts:15",{"_index":441,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/categories/categories.service.ts:8",{"_index":438,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/flowbite/flowbite.service.ts",{"_index":540,"title":{},"body":{"injectables/FlowbiteService.html":{},"coverage.html":{}}}],["src/app/core/services/flowbite/flowbite.service.ts:11",{"_index":546,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["src/app/core/services/flowbite/flowbite.service.ts:7",{"_index":543,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["src/app/core/services/orders/orders.service.ts",{"_index":875,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/app/core/services/orders/orders.service.ts:11",{"_index":880,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/orders/orders.service.ts:13",{"_index":879,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/orders/orders.service.ts:8",{"_index":877,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/products/products.service.ts",{"_index":901,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/app/core/services/products/products.service.ts:12",{"_index":907,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/app/core/services/products/products.service.ts:17",{"_index":909,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/app/core/services/products/products.service.ts:8",{"_index":905,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/app/core/services/whishing/whishing.service.ts",{"_index":1025,"title":{},"body":{"injectables/WhishingService.html":{},"coverage.html":{}}}],["src/app/core/services/whishing/whishing.service.ts:11",{"_index":1031,"title":{},"body":{"injectables/WhishingService.html":{}}}],["src/app/core/services/whishing/whishing.service.ts:20",{"_index":1033,"title":{},"body":{"injectables/WhishingService.html":{}}}],["src/app/core/services/whishing/whishing.service.ts:26",{"_index":1034,"title":{},"body":{"injectables/WhishingService.html":{}}}],["src/app/core/services/whishing/whishing.service.ts:8",{"_index":1029,"title":{},"body":{"injectables/WhishingService.html":{}}}],["src/app/layout/auth",{"_index":110,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/blank",{"_index":192,"title":{},"body":{"components/BlankLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/footer/footer.component.ts",{"_index":555,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layout/navbar/navbar.component.ts",{"_index":854,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/layout/navbar/navbar.component.ts:12",{"_index":861,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layout/navbar/navbar.component.ts:13",{"_index":862,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/pages/allorders/allorders.component.ts",{"_index":9,"title":{},"body":{"components/AllordersComponent.html":{},"coverage.html":{}}}],["src/app/pages/brands/brands.component.ts",{"_index":216,"title":{},"body":{"components/BrandsComponent.html":{},"coverage.html":{}}}],["src/app/pages/brands/brands.component.ts:12",{"_index":232,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:14",{"_index":230,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:16",{"_index":228,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:20",{"_index":227,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:30",{"_index":226,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/cart/cart.component.ts",{"_index":258,"title":{},"body":{"components/CartComponent.html":{},"coverage.html":{}}}],["src/app/pages/cart/cart.component.ts:102",{"_index":277,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:17",{"_index":281,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:19",{"_index":279,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:21",{"_index":272,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:25",{"_index":271,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:37",{"_index":274,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:70",{"_index":270,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/categories/categories.component.ts",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/pages/categories/categories.component.ts:20",{"_index":406,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:21",{"_index":409,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:22",{"_index":402,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:24",{"_index":404,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:25",{"_index":407,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:27",{"_index":401,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:31",{"_index":400,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:44",{"_index":399,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts",{"_index":457,"title":{},"body":{"components/CheckoutComponent.html":{},"coverage.html":{}}}],["src/app/pages/checkout/checkout.component.ts:13",{"_index":480,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:14",{"_index":475,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:15",{"_index":482,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:18",{"_index":478,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:19",{"_index":476,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:22",{"_index":472,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:27",{"_index":471,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:35",{"_index":470,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:46",{"_index":473,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/details/details.component.ts",{"_index":520,"title":{},"body":{"components/DetailsComponent.html":{},"coverage.html":{}}}],["src/app/pages/details/details.component.ts:16",{"_index":525,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:17",{"_index":528,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:19",{"_index":527,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:20",{"_index":526,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:22",{"_index":524,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts",{"_index":588,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:15",{"_index":616,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:16",{"_index":606,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:17",{"_index":603,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:18",{"_index":615,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:20",{"_index":617,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:23",{"_index":621,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:26",{"_index":614,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:36",{"_index":601,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:57",{"_index":600,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:73",{"_index":599,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":700,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts:110",{"_index":717,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:125",{"_index":714,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:139",{"_index":720,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:146",{"_index":716,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:43",{"_index":752,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:44",{"_index":723,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:45",{"_index":721,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:46",{"_index":753,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:47",{"_index":749,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:48",{"_index":755,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:50",{"_index":745,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:51",{"_index":747,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:53",{"_index":750,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:54",{"_index":722,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:56",{"_index":735,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:67",{"_index":744,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:94",{"_index":719,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:99",{"_index":718,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/login/login.component.ts",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/login/login.component.ts:14",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:15",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:16",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:17",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:18",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:19",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:36",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/notfound/notfound.component.ts",{"_index":871,"title":{},"body":{"components/NotfoundComponent.html":{},"coverage.html":{}}}],["src/app/pages/product/product.component.ts",{"_index":888,"title":{},"body":{"components/ProductComponent.html":{},"coverage.html":{}}}],["src/app/pages/product/product.component.ts:26",{"_index":898,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:27",{"_index":899,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:28",{"_index":895,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:29",{"_index":900,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:31",{"_index":897,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:32",{"_index":896,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:34",{"_index":894,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:38",{"_index":893,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:49",{"_index":892,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:62",{"_index":891,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/register/register.component.ts",{"_index":915,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/pages/register/register.component.ts:15",{"_index":924,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:16",{"_index":925,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:17",{"_index":940,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:19",{"_index":926,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:20",{"_index":928,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:21",{"_index":927,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:22",{"_index":939,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:39",{"_index":923,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:75",{"_index":920,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/whishlist/whishlist.component.ts",{"_index":1039,"title":{},"body":{"components/WhishlistComponent.html":{},"coverage.html":{}}}],["src/app/pages/whishlist/whishlist.component.ts:16",{"_index":1053,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["src/app/pages/whishlist/whishlist.component.ts:17",{"_index":1052,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["src/app/pages/whishlist/whishlist.component.ts:18",{"_index":1050,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["src/app/pages/whishlist/whishlist.component.ts:20",{"_index":1054,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["src/app/pages/whishlist/whishlist.component.ts:22",{"_index":1051,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["src/app/pages/whishlist/whishlist.component.ts:34",{"_index":1049,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["src/app/pages/whishlist/whishlist.component.ts:38",{"_index":1048,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["src/app/pages/whishlist/whishlist.component.ts:50",{"_index":1047,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["src/app/pages/whishlist/whishlist.component.ts:61",{"_index":1045,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["src/app/shared/interfaces/ibrands.ts",{"_index":796,"title":{},"body":{"interfaces/IBrands.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/icart.ts",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/icategories.ts",{"_index":797,"title":{},"body":{"interfaces/ICategories.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/iproduct.ts",{"_index":197,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category-1.html":{},"interfaces/IProduct.html":{},"interfaces/Subcategory-1.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/iwhish.ts",{"_index":453,"title":{},"body":{"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IWhish.html":{},"interfaces/Subcategory-2.html":{},"coverage.html":{}}}],["src/app/shared/pipes/search/search.pipe.ts",{"_index":1010,"title":{},"body":{"pipes/SearchPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/search/search.pipe.ts:8",{"_index":1013,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["src/app/shared/pipes/welcome/welcome.pipe.ts",{"_index":1021,"title":{},"body":{"pipes/WelcomePipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/welcome/welcome.pipe.ts:8",{"_index":1023,"title":{},"body":{"pipes/WelcomePipe.html":{}}}],["src/main.server.ts",{"_index":1109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":669,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["started",{"_index":1148,"title":{"index.html":{}},"body":{}}],["state",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":455,"title":{},"body":{"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IWhish.html":{},"interfaces/Subcategory-2.html":{}}}],["step",{"_index":333,"title":{},"body":{"components/CartComponent.html":{},"components/ForgetpasswordComponent.html":{}}}],["step:number=1",{"_index":623,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["stop",{"_index":560,"title":{},"body":{"components/FooterComponent.html":{}}}],["store",{"_index":1184,"title":{},"body":{"index.html":{}}}],["string",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"components/CheckoutComponent.html":{},"interfaces/Datum.html":{},"components/HomeComponent.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"components/LoginComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{}}}],["styleurl",{"_index":16,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["subcategory",{"_index":205,"title":{"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"coverage.html":{}}}],["submentform",{"_index":469,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["submentform():void",{"_index":507,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["submitform",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitform():void",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe",{"_index":577,"title":{},"body":{"components/FooterComponent.html":{}}}],["success",{"_index":320,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["such",{"_index":1179,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1209,"title":{},"body":{"index.html":{}}}],["support",{"_index":570,"title":{},"body":{"components/FooterComponent.html":{}}}],["sure",{"_index":300,"title":{},"body":{"components/CartComponent.html":{}}}],["swal",{"_index":286,"title":{},"body":{"components/CartComponent.html":{}}}],["swal.fire",{"_index":299,"title":{},"body":{"components/CartComponent.html":{}}}],["sweetalert2",{"_index":287,"title":{},"body":{"components/CartComponent.html":{},"dependencies.html":{}}}],["sweetalert2/ngx",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["terms",{"_index":575,"title":{},"body":{"components/FooterComponent.html":{}}}],["test",{"_index":1196,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1204,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1201,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1193,"title":{},"body":{"index.html":{}}}],["text",{"_index":301,"title":{},"body":{"components/CartComponent.html":{},"pipes/SearchPipe.html":{}}}],["text:string",{"_index":1017,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["then((result",{"_index":315,"title":{},"body":{"components/CartComponent.html":{}}}],["this.activatedroute.parammap.subscribe",{"_index":501,"title":{},"body":{"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{}}}],["this.authservice.saveuserdata",{"_index":643,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.sendlogginform(this.loginform.value).subscribe",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.sendregisterform(this.register.value).subscribe",{"_index":947,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.setcodeverify(this.verifytcode.value).subscribe",{"_index":638,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["this.authservice.setemailverify(this.verifyemail.value).subscribe",{"_index":633,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["this.authservice.setresetpassword(this.resetpassword.value).subscribe",{"_index":641,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["this.brands",{"_index":239,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.brandsservice.getallbrands().subscribe",{"_index":236,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.brandsservice.getbrandsdetails(id).subscribe",{"_index":243,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.carddetails",{"_index":325,"title":{},"body":{"components/CartComponent.html":{}}}],["this.carddetails=res.data",{"_index":296,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartid",{"_index":503,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.cartid,this.checkoutform.value).subscribe",{"_index":509,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.cartid=this.activatedroute.snapshot.parammap.get('id",{"_index":505,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.cartservice.addproducttocart(id).subscribe",{"_index":428,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["this.cartservice.clearcart().subscribe",{"_index":323,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartservice.getloggedusercart().subscribe",{"_index":293,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartservice.removespecificcartitem(id).subscribe",{"_index":317,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartservice.updateproductquantity(id,count).subscribe",{"_index":328,"title":{},"body":{"components/CartComponent.html":{}}}],["this.categories",{"_index":423,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["this.categoriesservice.getallcategories().subscribe",{"_index":422,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["this.checkoutform=this.formbuilder.group",{"_index":494,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.confirmpassword",{"_index":938,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.flowbiteservice.loadflowbite((flowbite",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["this.formbuilder.group",{"_index":929,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.getbrands",{"_index":235,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.getcartdata",{"_index":291,"title":{},"body":{"components/CartComponent.html":{}}}],["this.getcartid",{"_index":492,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.getcategoriesdata",{"_index":764,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.getcategorydata",{"_index":421,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.getproductsdata",{"_index":763,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["this.getwhishingitems",{"_index":1056,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["this.httpclient.delete",{"_index":1037,"title":{},"body":{"injectables/WhishingService.html":{}}}],["this.httpclient.delete(`https://ecommerce.routemisr.com/api/v1/cart",{"_index":378,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.delete(`https://ecommerce.routemisr.com/api/v1/cart/${id",{"_index":376,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.get",{"_index":256,"title":{},"body":{"injectables/BrandsService.html":{},"injectables/WhishingService.html":{}}}],["this.httpclient.get(\"https://ecommerce.routemisr.com/api/v1/cart",{"_index":374,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.get(\"https://ecommerce.routemisr.com/api/v1/categories",{"_index":443,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.httpclient.get('https://ecommerce.routemisr.com/api/v1/brands",{"_index":255,"title":{},"body":{"injectables/BrandsService.html":{}}}],["this.httpclient.get(`https://ecommerce.routemisr.com/api/v1/categories/${id",{"_index":445,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.httpclient.post",{"_index":1035,"title":{},"body":{"injectables/WhishingService.html":{}}}],["this.httpclient.post('https://ecommerce.routemisr.com/api/v1/cart",{"_index":371,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/auth/forgotpasswords",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/auth/signin",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/auth/signup",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/auth/verifyresetcode",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`https://ecommerce.routemisr.com/api/v1/orders/checkout",{"_index":883,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.httpclient.put(`${environment.baseurl}/api/v1/auth/resetpassword",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.put(`https://ecommerce.routemisr.com/api/v1/cart/${id",{"_index":380,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclint.get(\"https://ecommerce.routemisr.com/api/v1/products",{"_index":912,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.httpclint.get(`https://ecommerce.routemisr.com/api/v1/products/${id",{"_index":914,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.initform",{"_index":491,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.isloading=false",{"_index":636,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.isloading=true",{"_index":632,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.issuccess=res.message",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.msgerror",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.ordersservice.checkoutpayment",{"_index":508,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.productdetails=res.data",{"_index":537,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.productid=res.get(\"id",{"_index":534,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.products",{"_index":766,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["this.productsservice.getallproducts().subscribe",{"_index":765,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["this.productsservice.getspecificproduct(this.productid).subscribe",{"_index":536,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.register.markallastouched",{"_index":948,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.resetpassword.get('email')?.patchvalue(emailvalue",{"_index":631,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["this.router.navigate(['/home",{"_index":644,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["this.step",{"_index":635,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["this.toastrservice.success(res.message",{"_index":430,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["this.userdata",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userdata=null",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.whishingservice.addproducttowhishinglist(id).subscribe",{"_index":778,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["this.whishingservice.deleteitemfromwhishinglist(id).subscribe",{"_index":1059,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["this.whishingservice.getwhishinglistitems().subscribe",{"_index":1057,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["this.whishitems",{"_index":1058,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["throwerror",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Brand.html":{},"components/CartComponent.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["titlecase",{"_index":792,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["titlecasepipe",{"_index":414,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{}}}],["toastr",{"_index":417,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{},"dependencies.html":{}}}],["toastrservice",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["toastrservice.error(error.error.message",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["token:this.mytoken",{"_index":887,"title":{},"body":{"injectables/OrdersService.html":{}}}],["tools",{"_index":1173,"title":{},"body":{"index.html":{}}}],["top",{"_index":774,"title":{},"body":{"components/HomeComponent.html":{}}}],["total",{"_index":345,"title":{},"body":{"components/CartComponent.html":{}}}],["totalcartprice",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{}}}],["touchdrag",{"_index":727,"title":{},"body":{"components/HomeComponent.html":{},"components/WhishlistComponent.html":{}}}],["track",{"_index":245,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/WhishlistComponent.html":{}}}],["transform",{"_index":1011,"title":{},"body":{"pipes/SearchPipe.html":{},"pipes/WelcomePipe.html":{}}}],["transform(arr",{"_index":1012,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["transform(value",{"_index":1022,"title":{},"body":{"pipes/WelcomePipe.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["trends",{"_index":564,"title":{},"body":{"components/FooterComponent.html":{}}}],["true",{"_index":307,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/WhishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":582,"title":{},"body":{"components/FooterComponent.html":{}}}],["type",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"components/CheckoutComponent.html":{},"interfaces/Datum.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"components/LoginComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"pipes/WelcomePipe.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1192,"title":{},"body":{"index.html":{}}}],["updatecount",{"_index":269,"title":{},"body":{"components/CartComponent.html":{}}}],["updatecount(id",{"_index":275,"title":{},"body":{"components/CartComponent.html":{}}}],["updatecount(id:string,count:number):void",{"_index":327,"title":{},"body":{"components/CartComponent.html":{}}}],["updatedat",{"_index":214,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Datum.html":{},"interfaces/IBrands.html":{},"interfaces/ICart.html":{},"interfaces/ICategories.html":{},"interfaces/IProduct.html":{},"interfaces/IWhish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{}}}],["updateproductquantity",{"_index":357,"title":{},"body":{"injectables/CartService.html":{}}}],["updateproductquantity(id",{"_index":365,"title":{},"body":{"injectables/CartService.html":{}}}],["updateproductquantity(id:string,newcount:number):observable",{"_index":379,"title":{},"body":{"injectables/CartService.html":{}}}],["updates",{"_index":579,"title":{},"body":{"components/FooterComponent.html":{}}}],["uppercase",{"_index":670,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["uppercasepipe",{"_index":702,"title":{},"body":{"components/HomeComponent.html":{}}}],["url(api",{"_index":383,"title":{},"body":{"injectables/CartService.html":{}}}],["use",{"_index":1198,"title":{},"body":{"index.html":{}}}],["used",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userdata",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata:any=null",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["using",{"_index":1152,"title":{},"body":{"index.html":{}}}],["valid",{"_index":657,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators",{"_index":484,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":611,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":932,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":931,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern(/^01[0123][0",{"_index":497,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["validators.pattern(/^01[0125][0",{"_index":937,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern(/^[0",{"_index":619,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["validators.pattern(/^[a",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern(/^\\w{6",{"_index":613,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["validators.required",{"_index":610,"title":{},"body":{"components/ForgetpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"pipes/WelcomePipe.html":{},"components/WhishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":29,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["variable",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1227,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":659,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifycodesubmit",{"_index":597,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifycodesubmit():void",{"_index":637,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifyemail",{"_index":594,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifyemail.get('email')?.geterror('email",{"_index":654,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifyemail.get('email')?.geterror('required",{"_index":652,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifyemail.get('email')?.touched",{"_index":650,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifyemail.get(\\'email\\')?.geterror(\\'email",{"_index":687,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifyemail.get(\\'email\\')?.geterror(\\'required",{"_index":686,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifyemail.get(\\'email\\')?.touched",{"_index":685,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifyemail:formgroup",{"_index":626,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifyemailsubmit",{"_index":598,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifyemailsubmit():void",{"_index":629,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifytcode",{"_index":595,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifytcode.get('password')?.geterror('pattern",{"_index":668,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifytcode.get('password')?.touched",{"_index":663,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifytcode.get(\\'password\\')?.geterror(\\'pattern",{"_index":691,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifytcode.get(\\'password\\')?.touched",{"_index":689,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["verifytcode:formgroup",{"_index":627,"title":{},"body":{"components/ForgetpasswordComponent.html":{}}}],["version",{"_index":1155,"title":{},"body":{"index.html":{},"properties.html":{}}}],["visit",{"_index":1218,"title":{},"body":{"index.html":{}}}],["void",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["warning",{"_index":305,"title":{},"body":{"components/CartComponent.html":{}}}],["welcome",{"_index":779,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"pipes/WelcomePipe.html":{}}}],["welcomepipe",{"_index":1020,"title":{"pipes/WelcomePipe.html":{}},"body":{"pipes/WelcomePipe.html":{},"coverage.html":{}}}],["whenever",{"_index":1167,"title":{},"body":{"index.html":{}}}],["whishing",{"_index":1061,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["whishingservice",{"_index":709,"title":{"injectables/WhishingService.html":{}},"body":{"components/HomeComponent.html":{},"components/ProductComponent.html":{},"injectables/WhishingService.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["whishitems",{"_index":1042,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["whishitems.data",{"_index":1068,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["whishlist",{"_index":67,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{}}}],["whishlist.component.html",{"_index":1040,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["whishlist.component.scss",{"_index":1041,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["whishlistcomponent",{"_index":66,"title":{"components/WhishlistComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductComponent.html":{},"components/RegisterComponent.html":{},"components/WhishlistComponent.html":{},"coverage.html":{}}}],["window.scrollto",{"_index":773,"title":{},"body":{"components/HomeComponent.html":{}}}],["wish",{"_index":1064,"title":{},"body":{"components/WhishlistComponent.html":{}}}],["withfetch",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["won't",{"_index":302,"title":{},"body":{"components/CartComponent.html":{}}}],["work",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":24,"title":{},"body":{"components/AllordersComponent.html":{},"components/NotfoundComponent.html":{}}}],["yes",{"_index":313,"title":{},"body":{"components/CartComponent.html":{}}}],["yours",{"_index":336,"title":{},"body":{"components/CartComponent.html":{}}}],["z]\\w{7",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["zone.js",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AllordersComponent.html":{"url":"components/AllordersComponent.html","title":"component - AllordersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AllordersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/allorders/allorders.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-allorders\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./allorders.component.html\n            \n\n\n\n            \n                styleUrl\n                ./allorders.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-allorders',\n  imports: [],\n  templateUrl: './allorders.component.html',\n  styleUrl: './allorders.component.scss'\n})\nexport class AllordersComponent {\n\n}\n\n    \n\n    \n        allorders works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'allorders works!'\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AllordersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            NgxSpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(flowbiteService: FlowbiteService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowbiteService\n                                                  \n                                                        \n                                                                        FlowbiteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ecomrc'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { FlowbiteService } from './core/services/flowbite/flowbite.service';\nimport { NgxSpinnerComponent } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, NgxSpinnerComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'ecomrc';\n  constructor(private flowbiteService: FlowbiteService) {}\n\n  ngOnInit(): void {\n    this.flowbiteService.loadFlowbite((flowbite) => {\n      // Your custom code here\n      console.log('Flowbite loaded', flowbite);\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/auth-layout/auth-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-layout\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                FooterComponent\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { FooterComponent } from \"../footer/footer.component\";\nimport { NavbarComponent } from \"../navbar/navbar.component\";\n\n@Component({\n  selector: 'app-auth-layout',\n  imports: [RouterOutlet, FooterComponent, NavbarComponent],\n  templateUrl: './auth-layout.component.html',\n  styleUrl: './auth-layout.component.scss'\n})\nexport class AuthLayoutComponent {\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                saveUserData\n                            \n                            \n                                sendLogginForm\n                            \n                            \n                                sendRegisterForm\n                            \n                            \n                                setCodeVerify\n                            \n                            \n                                setEmailVerify\n                            \n                            \n                                setResetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserData\n                        \n                    \n                \n            \n            \n                \nsaveUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendLogginForm\n                        \n                    \n                \n            \n            \n                \nsendLogginForm(data: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendRegisterForm\n                        \n                    \n                \n            \n            \n                \nsendRegisterForm(data: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCodeVerify\n                        \n                    \n                \n            \n            \n                \nsetCodeVerify(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEmailVerify\n                        \n                    \n                \n            \n            \n                \nsetEmailVerify(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setResetPassword\n                        \n                    \n                \n            \n            \n                \nsetResetPassword(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { jwtDecode } from \"jwt-decode\";\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor( private httpClient:HttpClient) {   }\n\nuserData:any=null;\nprivate readonly router=inject(Router);\n\nsendRegisterForm( data : Object ):Observable{\n  return this.httpClient.post(`${environment.baseUrl}/api/v1/auth/signup`,\n    data\n  )\n}\nsendLogginForm( data : Object ):Observable{\n  return this.httpClient.post(`${environment.baseUrl}/api/v1/auth/signin`,\n    data\n  )\n}\n\nsaveUserData():void{\n  if(localStorage.getItem('userToken') !==null){\n    this.userData=  jwtDecode( localStorage.getItem('userToken')! )\n\n    console.log('user Data:',this.userData);\n    \n  }\n}\n\nlogOut():void{\nlocalStorage.removeItem('userToken');\nthis.userData=null;\n// call API remove token\n// navigate login\nthis.router.navigate(['/login'])\n}\n\nsetEmailVerify(data:object):Observable\n{\n  return this.httpClient.post(`${environment.baseUrl}/api/v1/auth/forgotPasswords`, data)\n}\nsetCodeVerify(data:object):Observable\n{\n  return this.httpClient.post(`${environment.baseUrl}/api/v1/auth/verifyResetCode`, data)\n}\nsetResetPassword(data:object):Observable\n{\n  return this.httpClient.put(`${environment.baseUrl}/api/v1/auth/resetPassword`, data)\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlankLayoutComponent.html":{"url":"components/BlankLayoutComponent.html","title":"component - BlankLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlankLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/blank-layout/blank-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blank-layout\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                FooterComponent\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./blank-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./blank-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { FooterComponent } from \"../footer/footer.component\";\nimport { NavbarComponent } from \"../navbar/navbar.component\";\n\n@Component({\n  selector: 'app-blank-layout',\n  imports: [RouterOutlet, FooterComponent, NavbarComponent],\n  templateUrl: './blank-layout.component.html',\n  styleUrl: './blank-layout.component.scss'\n})\nexport class BlankLayoutComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n\n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlankLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Brand.html":{"url":"interfaces/Brand.html","title":"interface - Brand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Brand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProduct {\n    sold: number\n    images: string[]\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    slug: string\n    description: string\n    quantity: number\n    price: number\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    createdAt: string\n    updatedAt: string\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BrandsComponent.html":{"url":"components/BrandsComponent.html","title":"component - BrandsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BrandsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/brands/brands.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-brands\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./brands.component.html\n            \n\n\n\n            \n                styleUrl\n                ./brands.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brands\n                            \n                            \n                                    Private\n                                    Readonly\n                                brandsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBranDetails\n                            \n                            \n                                getBrands\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBranDetails\n                        \n                    \n                \n            \n            \n                \ngetBranDetails(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBrands\n                        \n                    \n                \n            \n            \n                \ngetBrands()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brands\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IBrands[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        brandsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(BrandsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { BrandsService } from '../../core/services/brands/brands.service';\nimport { IBrands } from '../../shared/interfaces/ibrands';\n\n@Component({\n  selector: 'app-brands',\n  imports: [],\n  templateUrl: './brands.component.html',\n  styleUrl: './brands.component.scss',\n})\nexport class BrandsComponent implements OnInit {\n  private readonly brandsService = inject(BrandsService);\n\n  brands: IBrands[] = [];\n\n  ngOnInit(): void {\n    this.getBrands();\n  }\n\n  getBrands(): void {\n    this.brandsService.getAllBrands().subscribe({\n      next: (res) => {\n        this.brands = res.data;\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n  getBranDetails(id: string): void {\n    this.brandsService.getBrandsDetails(id).subscribe({\n      next: (res) => {\n        console.log(res);\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @for (brand of brands; track brand._id) {\n      \n        \n          \n        \n        \n          \n            {{ brand.name }}\n          \n        \n      \n\n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @for (brand of brands; track brand._id) {                                                              {{ brand.name }}                              }      '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BrandsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrandsService.html":{"url":"injectables/BrandsService.html","title":"injectable - BrandsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BrandsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/brands/brands.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBrands\n                            \n                            \n                                getBrandsDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/brands/brands.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBrands\n                        \n                    \n                \n            \n            \n                \ngetAllBrands()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/brands/brands.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBrandsDetails\n                        \n                    \n                \n            \n            \n                \ngetBrandsDetails(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/brands/brands.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BrandsService {\n  constructor(private httpClient: HttpClient) {}\n\n  getAllBrands(): Observable {\n    return this.httpClient.get('https://ecommerce.routemisr.com/api/v1/brands');\n  }\n\n  getBrandsDetails(id: string): Observable {\n    return this.httpClient.get(\n      `https://ecommerce.routemisr.com/api/v1/brands/${id}`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartComponent.html":{"url":"components/CartComponent.html","title":"component - CartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/cart/cart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart\n            \n\n\n            \n                imports\n                \n                            CurrencyPipe\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardDetails\n                            \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearItems\n                            \n                            \n                                getCartData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeItem\n                            \n                            \n                                updateCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearItems\n                        \n                    \n                \n            \n            \n                \nclearItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartData\n                        \n                    \n                \n            \n            \n                \ngetCartData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCount\n                        \n                    \n                \n            \n            \n                \nupdateCount(id: string, count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICart\n\n                    \n                \n                \n                    \n                        Default value : {} as ICart\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cart/cart.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cart/cart.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { CartService } from '../../core/services/cart/cart.service';\nimport { error } from 'console';\nimport { ICart } from '../../shared/interfaces/icart';\nimport { CurrencyPipe } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-cart',\n  imports: [CurrencyPipe,RouterLink],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss'\n})\nexport class CartComponent implements OnInit {\n\n  private readonly cartService=inject(CartService)\n  \n  cardDetails:ICart={} as ICart;\n\n  ngOnInit(): void {\n    this.getCartData();\n  }\n\n  getCartData():void{\n    this.cartService.getLoggedUserCart().subscribe({\n      next:(res)=>{\n        console.log(res.data); \n        this.cardDetails=res.data;\n      },\n      error:(error)=>{\n        console.log(error);\n      }\n    })\n  }\n\n  removeItem(id:string):void{\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.cartService.removeSpecificCartItem(id).subscribe({\n          next:(res)=>{\n            console.log(res);\n            // get Data\n            this.cardDetails=res.data\n            Swal.fire({\n              title: \"Deleted!\",\n              text: \"Your Item has been deleted.\",\n              icon: \"success\"\n            });\n            \n          },\n          error:(error)=>{\n            console.log(error);\n            \n          }\n        })\n        \n      }\n    });\n   \n  }\n  clearItems():void{\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Clear it!\"\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.cartService.clearCart().subscribe({\n          next:(res)=>{\n            console.log(res);\n            if(res.message === 'success'){\n               this.cardDetails ={} as ICart\n               Swal.fire({\n                title: \"Cleared!\",\n                text: \"Your cart has been Cleared.\",\n                icon: \"success\"\n              });\n            }\n          },\n          error:(error)=>{\n            console.log(error);\n          }\n        })\n       \n      }\n    });\n  \n  }\n  updateCount(id:string,count:number):void{\n    this.cartService.updateProductQuantity(id,count).subscribe({\n      next:(res)=>{\n        console.log(res);\n        // getCartData\n        this.cardDetails=res.data\n      },\n      error:(error)=>{\n        console.log(error);\n      }\n    })\n}\n}\n    \n\n    \n        \n  @if( cardDetails.totalCartPrice ){\n  \n    Shop Cart\n    \n      \"Your cart, your choices—just one step away from making them yours!\"\n    \n\n    \n      @for (product of cardDetails.products; track product.product.id ) {\n      \n        \n        \n          \n        \n        \n          \n          \n            \n              {{ product.product.title }}\n              \n                Price: {{ product.price | currency : \"GBP\" }}\n            \n\n            \n              \n                 Remove\n              \n            \n          \n          \n          \n            \n              \n            \n            {{ product.count }}\n            \n              \n            \n          \n        \n      \n      }\n    \n\n    \n      Total Cart Prise: \n\n      \n        {{ cardDetails.totalCartPrice | currency : \"GBP\" }}\n    \n\n    \n      \n         Clear Cart\n      \n      \n        Check Out\n      \n    \n  \n  }@else {\n  \n    \n    Oops! Your Cart is Empty\n  \n\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if( cardDetails.totalCartPrice ){      Shop Cart          \"Your cart, your choices—just one step away from making them yours!\"              @for (product of cardDetails.products; track product.product.id ) {                                                                                              {{ product.product.title }}                              Price: {{ product.price | currency : \"GBP\" }}                                                       Remove                                                                                                          {{ product.count }}                                                                    }              Total Cart Prise:               {{ cardDetails.totalCartPrice | currency : \"GBP\" }}                       Clear Cart                    Check Out              }@else {          Oops! Your Cart is Empty    }'\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cart/cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                myToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProductToCart\n                            \n                            \n                                clearCart\n                            \n                            \n                                getLoggedUserCart\n                            \n                            \n                                removeSpecificCartItem\n                            \n                            \n                                updateProductQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/cart/cart.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProductToCart\n                        \n                    \n                \n            \n            \n                \naddProductToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCart\n                        \n                    \n                \n            \n            \n                \nclearCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedUserCart\n                        \n                    \n                \n            \n            \n                \ngetLoggedUserCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSpecificCartItem\n                        \n                    \n                \n            \n            \n                \nremoveSpecificCartItem(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProductQuantity\n                        \n                    \n                \n            \n            \n                \nupdateProductQuantity(id: string, newCount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newCount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        myToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : localStorage.getItem('userToken')\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cart/cart.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  myToken:any=localStorage.getItem('userToken');\n\n  addProductToCart(id:string):Observable{\n    return this.httpClient.post('https://ecommerce.routemisr.com/api/v1/cart', \n    {\n      \"productId\": id  \n    }\n)\n  }\n  getLoggedUserCart():Observable{\n    return this.httpClient.get(\"https://ecommerce.routemisr.com/api/v1/cart\"\n)\n  }\n\n  removeSpecificCartItem(id:string):Observable{\n  return  this.httpClient.delete(`https://ecommerce.routemisr.com/api/v1/cart/${id}`)\n  }\n  \n  clearCart():Observable{\n    return  this.httpClient.delete(`https://ecommerce.routemisr.com/api/v1/cart`)\n    }\n\nupdateProductQuantity(id:string,newCount:number):Observable{\n  return this.httpClient.put(`https://ecommerce.routemisr.com/api/v1/cart/${id}`,\n    {\n      \"count\": newCount\n  }\n  )\n  }\n}\n\n// post, put ---> url(api) , body , -----options header\n\n//get, delet ---->url(api)  , -----options header \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/categories/categories.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n\n            \n                styleUrl\n                ./categories.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                categories\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoriesService\n                            \n                            \n                                hamada\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCard\n                            \n                            \n                                getCategoryData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCard\n                        \n                    \n                \n            \n            \n                \naddToCard(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryData\n                        \n                    \n                \n            \n            \n                \ngetCategoryData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICategories[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoriesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CategoriesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hamada\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ProductsService } from '../../core/services/products/products.service';\nimport { IProduct } from '../../shared/interfaces/iproduct';\nimport { RouterLink } from '@angular/router';\nimport { CurrencyPipe, SlicePipe, TitleCasePipe } from '@angular/common';\nimport { SearchPipe } from '../../shared/pipes/search/search.pipe';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormsModule } from '@angular/forms';\nimport { CartService } from '../../core/services/cart/cart.service';\nimport { CategoriesService } from '../../core/services/categories/categories.service';\nimport { ICategories } from '../../shared/interfaces/icategories';\n\n@Component({\n  selector: 'app-categories',\n  imports: [FormsModule],\n  templateUrl: './categories.component.html',\n  styleUrl: './categories.component.scss',\n})\nexport class CategoriesComponent implements OnInit {\n  private readonly categoriesService = inject(CategoriesService);\n  private readonly toastrService = inject(ToastrService);\n  private readonly cartService = inject(CartService);\n\n  categories: ICategories[] = [];\n  hamada: string = '';\n\n  ngOnInit(): void {\n    this.getCategoryData();\n  }\n\n  getCategoryData() {\n    this.categoriesService.getAllCategories().subscribe({\n      next: (res) => {\n        console.log(res.data);\n\n        this.categories = res.data;\n      },\n      error: (err) => {\n        console.error('Error fetching products:', err);\n      },\n    });\n  }\n\n  addToCard(id: string): void {\n    this.cartService.addProductToCart(id).subscribe({\n      next: (res) => {\n        if (res.status === 'success') {\n          this.toastrService.success(res.message, 'Fresh Cart');\n        }\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @for (cat of categories ; track cat._id){\n      \n        \n          \n            \n          \n        \n        \n          \n            \n              {{ cat.name }}\n            \n          \n        \n      \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @for (cat of categories ; track cat._id){                                                                                                  {{ cat.name }}                                          }      '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/categories/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllCategories\n                            \n                            \n                                getCategoriesDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/categories/categories.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/categories/categories.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoriesDetails\n                        \n                    \n                \n            \n            \n                \ngetCategoriesDetails(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/categories/categories.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  constructor( private httpClient:HttpClient) { }\n\n  getAllCategories():Observable{\n    return this.httpClient.get(\"https://ecommerce.routemisr.com/api/v1/categories\")\n  }\n  getCategoriesDetails(id:string):Observable{\n    return this.httpClient.get(`https://ecommerce.routemisr.com/api/v1/categories/${id}`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string;\n  cartOwner: string;\n  products: Product2[];\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  totalCartPrice: number;\n}\n\nexport interface Product2 {\n  count: number;\n  _id: string;\n  product: Product;\n  price: number;\n}\n\nexport interface Product {\n  subcategory: Subcategory[];\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category-1.html":{"url":"interfaces/Category-1.html","title":"interface - Category-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProduct {\n    sold: number\n    images: string[]\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    slug: string\n    description: string\n    quantity: number\n    price: number\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    createdAt: string\n    updatedAt: string\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category-2.html":{"url":"interfaces/Category-2.html","title":"interface - Category-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iwhish.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IWhish {\n  status: string;\n  count: number;\n  data: Datum[];\n}\n\nexport interface Datum {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckoutComponent.html":{"url":"components/CheckoutComponent.html","title":"component - CheckoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/checkout/checkout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkout\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./checkout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./checkout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                activatedRoute\n                            \n                            \n                                cartId\n                            \n                            \n                                checkOutForm\n                            \n                            \n                                    Private\n                                    Readonly\n                                formBuilder\n                            \n                            \n                                    Private\n                                    Readonly\n                                ordersService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCartId\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submentForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCartId\n                        \n                    \n                \n            \n            \n                \ngetCartId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submentForm\n                        \n                    \n                \n            \n            \n                \nsubmentForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkOutForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ordersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrdersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrdersService } from '../../core/services/orders/orders.service';\n\n@Component({\n  selector: 'app-checkout',\n  imports: [ReactiveFormsModule],\n  templateUrl: './checkout.component.html',\n  styleUrl: './checkout.component.scss'\n})\nexport class CheckoutComponent implements OnInit {\nprivate readonly formBuilder=inject(FormBuilder)\nprivate readonly activatedRoute=inject(ActivatedRoute)\nprivate readonly ordersService=inject(OrdersService)\n\n  \ncheckOutForm!:FormGroup ;\ncartId:string='';\n\n\n  ngOnInit(): void {\n      this.initForm();\n      this.getCartId()\n  }\n\n  initForm():void{\n    this.checkOutForm=this.formBuilder.group({\n      details:[null,[Validators.required]],\n      phone:[null,[Validators.required , Validators.pattern(/^01[0123][0-9]{8}$/)]],\n      city:[null,[Validators.required]],\n    })\n  }\n\n  getCartId():void{\n    this.activatedRoute.paramMap.subscribe({\n      next:(param)=>{\n        this.cartId= param.get('id')!\n      }\n    })\n    // this.cartId=this.activatedRoute.snapshot.paramMap.get('id') !;\n    console.log(this.cartId);\n    \n  }\n\n  submentForm():void{\n    this.ordersService.checkOutPayMent(    this.cartId,this.checkOutForm.value).subscribe({\n      next:(res)=>{\n       console.log(res);\n\n       if(res.status === \"success\"){\n        open( res.session.url , '_self')\n       }\n       \n      }, error:(error)=>{\nconsole.log(error);\n\n      }\n    })\n  }\n\n}\n\n    \n\n    \n        \n  Check Out\n\n  \n    \n      details\n      \n    \n\n    \n      phone\n      \n    \n\n    \n      city\n      \n    \n\n    \n      Online Payment\n    \n    \n      Cash Payment\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Check Out            details                    phone                    city                    Online Payment              Cash Payment      '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Datum.html":{"url":"interfaces/Datum.html","title":"interface - Datum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Datum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iwhish.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            __v\n                                        \n                                \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            ratingsQuantity\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            sold\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsQuantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsQuantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sold:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IWhish {\n  status: string;\n  count: number;\n  data: Datum[];\n}\n\nexport interface Datum {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/details/details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                activatedRoute\n                            \n                            \n                                productDetails\n                            \n                            \n                                productId\n                            \n                            \n                                    Private\n                                    Readonly\n                                productsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/details/details.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject (ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IProduct\n\n                    \n                \n                \n                    \n                        Default value : {} as IProduct\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject (ProductsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CategoriesService } from '../../core/services/categories/categories.service';\nimport { ProductComponent } from '../product/product.component';\nimport { ProductsService } from '../../core/services/products/products.service';\nimport { IProduct } from '../../shared/interfaces/iproduct';\n\n@Component({\n  selector: 'app-details',\n  imports: [],\n  templateUrl: './details.component.html',\n  styleUrl: './details.component.scss'\n})\nexport class DetailsComponent implements OnInit {\n\nprivate readonly activatedRoute=inject (ActivatedRoute)\nprivate readonly productsService=inject (ProductsService)\n\nproductId:any;\nproductDetails:IProduct={} as IProduct;\n\nngOnInit(): void {\n \n  this.activatedRoute.paramMap.subscribe({\n    next:(res)=>{\n      this.productId=res.get(\"id\")\n      console.log(this.productId);\n\n      this.productsService.getSpecificProduct(this.productId).subscribe({\n        next:(res)=>{\n          this.productDetails=res.data\n          \n        },\n        error:(error)=>{\n          console.log(error);\n          \n        }\n      })\n    },\n    error:(error)=>{\n\n    }\n  })\n\n}\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    {{ productDetails.title }}\n    {{ productDetails.description }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ productDetails.title }}    {{ productDetails.description }}  '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FlowbiteService.html":{"url":"injectables/FlowbiteService.html","title":"injectable - FlowbiteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FlowbiteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/flowbite/flowbite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadFlowbite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/flowbite/flowbite.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFlowbite\n                        \n                    \n                \n            \n            \n                \nloadFlowbite(callback: (flowbite: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/flowbite/flowbite.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlowbiteService {\n\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {}\n\n  loadFlowbite(callback: (flowbite: any) => void) {\n    if (isPlatformBrowser(this.platformId)) {\n      import('flowbite').then(flowbite => {\n        callback(flowbite);\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      FreshCard\n      \n        Your one-stop shop for the best deals and latest trends.\n      \n    \n\n    \n    \n      Quick Links\n      \n        Home\n        Shop\n        About Us\n        Contact\n      \n    \n\n    \n    \n      Customer Support\n      \n        FAQs\n        Shipping & Returns\n        Privacy Policy\n        Terms of Service\n      \n    \n\n    \n    \n      Subscribe to Our Newsletter\n      Get the latest deals and updates.\n      \n        \n        \n          Subscribe\n        \n      \n    \n  \n\n  \n  \n    \n      Facebook\n      Instagram\n      Twitter\n    \n    &copy; 2025 ShopEase. All rights reserved.\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                FreshCard              Your one-stop shop for the best deals and latest trends.                        Quick Links              Home        Shop        About Us        Contact                        Customer Support              FAQs        Shipping & Returns        Privacy Policy        Terms of Service                        Subscribe to Our Newsletter      Get the latest deals and updates.                                Subscribe                                  Facebook      Instagram      Twitter        © 2025 ShopEase. All rights reserved.  '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetpasswordComponent.html":{"url":"components/ForgetpasswordComponent.html","title":"component - ForgetpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgetpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgetpassword\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgetpassword.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgetpassword.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                isLoading\n                            \n                            \n                                resetPassword\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                step\n                            \n                            \n                                verifyEmail\n                            \n                            \n                                verifytCode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPasswordSubmit\n                            \n                            \n                                verifyCodeSubmit\n                            \n                            \n                                verifyEmailSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordSubmit\n                        \n                    \n                \n            \n            \n                \nresetPasswordSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyCodeSubmit\n                        \n                    \n                \n            \n            \n                \nverifyCodeSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmailSubmit\n                        \n                    \n                \n            \n            \n                \nverifyEmailSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    email:new FormControl(null,  [Validators.required , Validators.email]),\n    newPassword:  new FormControl(null,\n      [\n        Validators.required,\n        Validators.pattern(/^\\w{6,}$/)\n      ]\n    )\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        step\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    email:new FormControl(null,  [Validators.required , Validators.email])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifytCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    resetCode:new FormControl(null,  [Validators.required , Validators.pattern(/^[0-9]{6}$/)])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AuthService } from '../../../core/services/auth/auth.service';\nimport { error } from 'console';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgetpassword',\n  imports: [ReactiveFormsModule],\n  templateUrl: './forgetpassword.component.html',\n  styleUrl: './forgetpassword.component.scss'\n})\nexport class ForgetpasswordComponent {\n\n  step:number=1;\n  isLoading:boolean=false\n  private readonly authService=inject(AuthService);\n  private readonly router=inject(Router);\n\n  verifyEmail:FormGroup = new FormGroup({\n    email:new FormControl(null,  [Validators.required , Validators.email])\n  })\n  verifytCode:FormGroup = new FormGroup({\n    resetCode:new FormControl(null,  [Validators.required , Validators.pattern(/^[0-9]{6}$/)])\n  })\n  resetPassword:FormGroup = new FormGroup({\n    email:new FormControl(null,  [Validators.required , Validators.email]),\n    newPassword:  new FormControl(null,\n      [\n        Validators.required,\n        Validators.pattern(/^\\w{6,}$/)\n      ]\n    )\n  })\n\n  verifyEmailSubmit():void{\n\n    let emailValue=this.verifyEmail.get('email')?.value\n\n    this.resetPassword.get('email')?.patchValue(emailValue)\n\n    this.isLoading=true;\n    this.authService.setEmailVerify(this.verifyEmail.value).subscribe({\n      next:(res)=>{\n        console.log(res);\n        if(res.statusMsg === 'success'){\n          this.step = 2 \n        }\n        this.isLoading=false;\n      },\n      error:(error)=>{\n        console.log(error);\n        this.isLoading=false;\n      }\n    })\n  }\n  verifyCodeSubmit():void{\n    this.isLoading=true;\n    this.authService.setCodeVerify(this.verifytCode.value).subscribe({\n      next:(res)=>{\n        console.log(res);\n        if(res.status === 'Success'){\n          this.step = 3\n        }\n        this.isLoading=false;\n      },\n      error:(error)=>{\n        console.log(error);\n        this.isLoading=false;\n      }\n    })\n  }\nresetPasswordSubmit():void{\n  this.isLoading=true;\n    this.authService.setResetPassword(this.resetPassword.value).subscribe({\n      next:(res)=>{\n        console.log(res);\n        localStorage.setItem(\"userToken\",res.token);\n        this.isLoading=false;\n        this.authService.saveUserData();\n        this.router.navigate(['/home'])\n      },\n      error:(error)=>{\n        console.log(error);\n        this.isLoading=false;\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    Forget Password\n\n    @if(step ===1 ){\n    \n      \n        \n          email\n          \n          @if(verifyEmail.get('email')?.errors &&\n          verifyEmail.get('email')?.touched){\n          \n            \n              \n            \n            Danger\n            \n              \n                @if (verifyEmail.get('email')?.getError('required')) {\n                Email is required.\n                }@else if (verifyEmail.get('email')?.getError('email')) {\n                Please enter a valid email address.\n                }\n              \n            \n          \n          }\n        \n\n        \n          Verify Email @if(isLoading){\n           \n          }\n        \n      \n    \n    } @else if(step === 2){\n    \n      \n        \n          resetCode\n          \n          @if(verifytCode.get('password')?.errors &&\n          verifytCode.get('password')?.touched){\n          \n            \n              \n            \n            Danger\n            \n              Ensure that these requirements are met:\n              \n                @if(verifytCode.get('password')?.getError('required')){\n                Password is required.\n                }@else if (verifytCode.get('password')?.getError('pattern')) {\n                \n                  Password must start with an uppercase letter and be at least 8\n                  characters long.\n                \n                }\n              \n            \n          \n          }\n        \n\n        \n          Verify Code @if(isLoading){\n           \n          }\n        \n      \n    \n    } @else if (step === 3) {\n    \n      \n        \n          email\n          \n          @if(resetPassword.get('email')?.errors &&\n          resetPassword.get('email')?.touched){\n          \n            \n              \n            \n            Danger\n            \n              \n                @if (resetPassword.get('email')?.getError('required')) {\n                Email is required.\n                }@else if (resetPassword.get('email')?.getError('email')) {\n                Please enter a valid email address.\n                }\n              \n            \n          \n          }\n        \n      \n\n      \n        \n          newPassword\n          \n          @if(resetPassword.get('password')?.errors &&\n          resetPassword.get('password')?.touched){\n          \n            \n              \n            \n            Danger\n            \n              Ensure that these requirements are met:\n              \n                @if(resetPassword.get('password')?.getError('required')){\n                Password is required.\n                }@else if (resetPassword.get('password')?.getError('pattern')) {\n                \n                  Password must start with an uppercase letter and be at least 8\n                  characters long.\n                \n                }\n              \n            \n          \n          }\n        \n      \n      \n        Reset Password @if(isLoading){\n         \n        }\n      \n    \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forget Password    @if(step ===1 ){                            email                    @if(verifyEmail.get(\\'email\\')?.errors &&          verifyEmail.get(\\'email\\')?.touched){                                                            Danger                                          @if (verifyEmail.get(\\'email\\')?.getError(\\'required\\')) {                Email is required.                }@else if (verifyEmail.get(\\'email\\')?.getError(\\'email\\')) {                Please enter a valid email address.                }                                              }                          Verify Email @if(isLoading){                     }                      } @else if(step === 2){                            resetCode                    @if(verifytCode.get(\\'password\\')?.errors &&          verifytCode.get(\\'password\\')?.touched){                                                            Danger                          Ensure that these requirements are met:                              @if(verifytCode.get(\\'password\\')?.getError(\\'required\\')){                Password is required.                }@else if (verifytCode.get(\\'password\\')?.getError(\\'pattern\\')) {                                  Password must start with an uppercase letter and be at least 8                  characters long.                                }                                              }                          Verify Code @if(isLoading){                     }                      } @else if (step === 3) {                            email                    @if(resetPassword.get(\\'email\\')?.errors &&          resetPassword.get(\\'email\\')?.touched){                                                            Danger                                          @if (resetPassword.get(\\'email\\')?.getError(\\'required\\')) {                Email is required.                }@else if (resetPassword.get(\\'email\\')?.getError(\\'email\\')) {                Please enter a valid email address.                }                                              }                                      newPassword                    @if(resetPassword.get(\\'password\\')?.errors &&          resetPassword.get(\\'password\\')?.touched){                                                            Danger                          Ensure that these requirements are met:                              @if(resetPassword.get(\\'password\\')?.getError(\\'required\\')){                Password is required.                }@else if (resetPassword.get(\\'password\\')?.getError(\\'pattern\\')) {                                  Password must start with an uppercase letter and be at least 8                  characters long.                                }                                              }                            Reset Password @if(isLoading){                 }              }  '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                            CarouselModule\n                            UpperCasePipe\n                            TitleCasePipe\n                            SlicePipe\n                            CurrencyPipe\n                            SearchPipe\n                            FormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                categories\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoriesService\n                            \n                            \n                                customMainSlider\n                            \n                            \n                                customOptions\n                            \n                            \n                                hamada\n                            \n                            \n                                myDate\n                            \n                            \n                                    Private\n                                    Readonly\n                                ngxSpinnerService\n                            \n                            \n                                products\n                            \n                            \n                                    Private\n                                    Readonly\n                                productsService\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                            \n                                    Private\n                                    Readonly\n                                whishingService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCard\n                            \n                            \n                                addToWhishing\n                            \n                            \n                                getCategoriesData\n                            \n                            \n                                getProductsData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scrollToSection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCard\n                        \n                    \n                \n            \n            \n                \naddToCard(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addToWhishing\n                        \n                    \n                \n            \n            \n                \naddToWhishing(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoriesData\n                        \n                    \n                \n            \n            \n                \ngetCategoriesData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductsData\n                        \n                    \n                \n            \n            \n                \ngetProductsData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToSection\n                        \n                    \n                \n            \n            \n                \nscrollToSection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICategories[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoriesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CategoriesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customMainSlider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwlOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n    navText: ['', ''],\n    items: 1,\n    nav: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwlOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    loop: false,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: false,\n    autoplay: true,\n    autoplayHoverPause: true,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 1,\n      },\n      400: {\n        items: 2,\n      },\n      740: {\n        items: 3,\n      },\n      940: {\n        items: 4,\n      },\n    },\n    nav: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hamada\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ngxSpinnerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NgxSpinnerService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IProduct[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        whishingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(WhishingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ProductsService } from '../../core/services/products/products.service';\nimport { IProduct } from '../../shared/interfaces/iproduct';\n\nimport { CategoriesService } from '../../core/services/categories/categories.service';\nimport { CarouselModule, OwlOptions } from 'ngx-owl-carousel-o';\nimport { ICategories } from '../../shared/interfaces/icategories';\nimport {\n  CurrencyPipe,\n  DatePipe,\n  JsonPipe,\n  SlicePipe,\n  TitleCasePipe,\n  UpperCasePipe,\n} from '@angular/common';\nimport { SearchPipe } from '../../shared/pipes/search/search.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { CartService } from '../../core/services/cart/cart.service';\nimport { error } from 'console';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { finalize } from 'rxjs';\nimport { WhishingService } from '../../core/services/whishing/whishing.service';\n\n@Component({\n  selector: 'app-home',\n  imports: [\n    CarouselModule,\n    UpperCasePipe,\n    TitleCasePipe,\n    SlicePipe,\n    CurrencyPipe,\n\n    SearchPipe,\n    FormsModule,\n    RouterLink,\n  ],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent implements OnInit {\n  private readonly productsService = inject(ProductsService);\n  private readonly categoriesService = inject(CategoriesService);\n  private readonly cartService = inject(CartService);\n  private readonly toastrService = inject(ToastrService);\n  private readonly ngxSpinnerService = inject(NgxSpinnerService);\n  private readonly whishingService = inject(WhishingService);\n\n  hamada: string = '';\n  myDate: any = new Date();\n\n  products: IProduct[] = [];\n  categories: ICategories[] = [];\n\n  customMainSlider: OwlOptions = {\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n    navText: ['', ''],\n    items: 1,\n    nav: true,\n  };\n  customOptions: OwlOptions = {\n    loop: false,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: false,\n    autoplay: true,\n    autoplayHoverPause: true,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 1,\n      },\n      400: {\n        items: 2,\n      },\n      740: {\n        items: 3,\n      },\n      940: {\n        items: 4,\n      },\n    },\n    nav: true,\n  };\n\n  ngOnInit(): void {\n    this.getProductsData();\n    this.getCategoriesData();\n  }\n\n  getProductsData() {\n    this.productsService.getAllProducts().subscribe({\n      next: (res) => {\n        this.products = res.data;\n      },\n      error: (err) => {\n        console.error('Error fetching products:', err);\n      },\n    });\n  }\n\n  getCategoriesData() {\n    // showLoading\n\n    this.categoriesService.getAllCategories().subscribe({\n      next: (res) => {\n        this.categories = res.data;\n        // hideLoading\n      },\n      error: (err) => {\n        console.log(err);\n        // hideLoading\n      },\n    });\n  }\n\n  addToCard(id: string): void {\n    this.cartService.addProductToCart(id).subscribe({\n      next: (res) => {\n        console.log(res);\n        if (res.status === 'success') {\n          this.toastrService.success(res.message, 'FreshCart');\n        }\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n\n  scrollToSection() {\n    const element = document.getElementById('targetSection');\n    if (element) {\n      window.scrollTo({ top: element.offsetTop, behavior: 'smooth' });\n    }\n  }\n\n  addToWhishing(id: string): void {\n    this.whishingService.addProductToWhishingList(id).subscribe({\n      next: (res) => {\n        console.log(res);\n        if (res.status === 'success') {\n          this.toastrService.success(res.message, 'FreshCart');\n        }\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Welcome To FreshCart\n      From Home to Fashion, FreshCart Has It All!\n      \n        Shop Now\n      \n    \n    \n      \n    \n  \n\n\n\n  \n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n\n  Popular Categories\n\n  \n    @for (cat of categories; track cat._id) {\n    \n      \n      \n        \n          \n        \n        {{ cat.name | uppercase }}\n      \n    \n    }\n  \n\n\n\n  \n    Popular Product\n    \n    \n      @for (prod of products.slice(0,12) | search : hamada ; track prod.id){\n      \n        \n          \n            \n          \n          \n            \n              {{ prod.category.name | slice : 0 : 5 }}\n            \n            \n              {{ prod.title.split(\" \", 2).join(\" \") | titlecase }}\n            \n            \n              {{ prod.price | currency : \"EUR\" }}\n              \n                \n                {{ prod.ratingsAverage }}\n              \n            \n          \n        \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome To FreshCart      From Home to Fashion, FreshCart Has It All!              Shop Now                                                                                                                        Popular Categories      @for (cat of categories; track cat._id) {                                                  {{ cat.name | uppercase }}              }        Popular Product              @for (prod of products.slice(0,12) | search : hamada ; track prod.id){                                                                                  {{ prod.category.name | slice : 0 : 5 }}                                      {{ prod.title.split(\" \", 2).join(\" \") | titlecase }}                                      {{ prod.price | currency : \"EUR\" }}                                              {{ prod.ratingsAverage }}                                                                                                                                        }      '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBrands.html":{"url":"interfaces/IBrands.html","title":"interface - IBrands","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBrands\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/ibrands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IBrands {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICart.html":{"url":"interfaces/ICart.html","title":"interface - ICart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            __v\n                                        \n                                \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            cartOwner\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                                \n                                        \n                                            totalCartPrice\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cartOwner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cartOwner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:     Product2[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Product2[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCartPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCartPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string;\n  cartOwner: string;\n  products: Product2[];\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  totalCartPrice: number;\n}\n\nexport interface Product2 {\n  count: number;\n  _id: string;\n  product: Product;\n  price: number;\n}\n\nexport interface Product {\n  subcategory: Subcategory[];\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICategories.html":{"url":"interfaces/ICategories.html","title":"interface - ICategories","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICategories\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icategories.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICategories {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n  createdAt: string;\n  updatedAt: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProduct.html":{"url":"interfaces/IProduct.html","title":"interface - IProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            ratingsQuantity\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            sold\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Brand\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Brand\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsQuantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsQuantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sold:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProduct {\n    sold: number\n    images: string[]\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    slug: string\n    description: string\n    quantity: number\n    price: number\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    createdAt: string\n    updatedAt: string\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWhish.html":{"url":"interfaces/IWhish.html","title":"interface - IWhish","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IWhish\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iwhish.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Datum[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Datum[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IWhish {\n  status: string;\n  count: number;\n  data: Datum[];\n}\n\nexport interface Datum {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                isLoading\n                            \n                            \n                                isSuccess\n                            \n                            \n                                loginForm\n                            \n                            \n                                msgError\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    \n    email:new FormControl(null ,\n      [\n        Validators.required,\n        Validators.email\n      ]\n    ),\n    password:new FormControl(null,\n      [\n        Validators.required,\n        Validators.pattern(/^[A-Z]\\w{7,}$/)\n      ]\n    ),\n    \n  } ,)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        msgError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, ReactiveFormsModule, Validators } from \"@angular/forms\"\nimport { AuthService } from '../../core/services/auth/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router, RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  imports: [ReactiveFormsModule,RouterLink],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n  private readonly authService=inject(AuthService)\n  private readonly router=inject(Router)\n  isLoading:boolean=false\n  msgError:string=\"\";\n  isSuccess:string=\"\";\n    loginForm:FormGroup =new FormGroup({\n    \n    email:new FormControl(null ,\n      [\n        Validators.required,\n        Validators.email\n      ]\n    ),\n    password:new FormControl(null,\n      [\n        Validators.required,\n        Validators.pattern(/^[A-Z]\\w{7,}$/)\n      ]\n    ),\n    \n  } ,)\n  \n  submitForm():void{\n        if(this.loginForm.valid){\n          this.isLoading=true\n          this.authService.sendLogginForm(this.loginForm.value).subscribe({\n            next:(res)=>{\n              console.log(res);\n              if(res.message === 'success'){\n                // navigate path login\n                // routerlink programming routing\n  \n                \n               setTimeout(()=>{\n                       //1-save token\n              \n              localStorage.setItem('userToken', res.token)\n              // 2-Decode token\n              this.authService.saveUserData()\n              // 3-nav \n                this.router.navigate(['/home'])\n               },500)\n  \n                this.isSuccess=res.message\n  \n              }\n              this.isLoading=false\n            },\n            error:(error:HttpErrorResponse)=>{\n              console.log(error);\n             this.msgError= error.error.message\n              this.isLoading=false\n            }\n          \n          })\n        }\n  }\n\n  \n}\n\n    \n\n    \n        \n  \n    Login Now\n\n    \n      \n      \n        email\n        \n        @if(loginForm.get('email')?.errors && loginForm.get('email')?.touched){\n        \n          \n            \n          \n          Danger\n          \n            \n              @if (loginForm.get('email')?.getError('required')) {\n              Email is required.\n              }@else if (loginForm.get('email')?.getError('email')) {\n              Please enter a valid email address.\n              }\n            \n          \n        \n        }\n      \n\n      \n      \n        password\n        \n        @if(loginForm.get('password')?.errors &&\n        loginForm.get('password')?.touched){\n        \n          \n            \n          \n          Danger\n          \n            Ensure that these requirements are met:\n            \n              @if(loginForm.get('password')?.getError('required')){\n              Password is required.\n              }@else if (loginForm.get('password')?.getError('pattern')) {\n              \n                Password must start with an uppercase letter and be at least 8\n                characters long.\n              \n              }\n            \n          \n        \n        }\n      \n\n      \n        Forget Password\n        \n          SignIn @if(isLoading){\n           \n          }\n        \n      \n      @if (msgError) {\n      \n        {{ msgError }}\n      \n      } @if (isSuccess) {\n      \n        Welcome ^_^\n      \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login Now                        email                @if(loginForm.get(\\'email\\')?.errors && loginForm.get(\\'email\\')?.touched){                                                  Danger                                    @if (loginForm.get(\\'email\\')?.getError(\\'required\\')) {              Email is required.              }@else if (loginForm.get(\\'email\\')?.getError(\\'email\\')) {              Please enter a valid email address.              }                                      }                          password                @if(loginForm.get(\\'password\\')?.errors &&        loginForm.get(\\'password\\')?.touched){                                                  Danger                      Ensure that these requirements are met:                          @if(loginForm.get(\\'password\\')?.getError(\\'required\\')){              Password is required.              }@else if (loginForm.get(\\'password\\')?.getError(\\'pattern\\')) {                              Password must start with an uppercase letter and be at least 8                characters long.                            }                                      }                    Forget Password                  SignIn @if(isLoading){                     }                    @if (msgError) {              {{ msgError }}            } @if (isSuccess) {              Welcome ^_^            }      '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                authService\n                            \n                            \n                                isLogin\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLogin\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLogin\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/navbar/navbar.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/navbar/navbar.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/navbar/navbar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, input } from '@angular/core';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { AuthService } from '../../core/services/auth/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  imports: [RouterLink,RouterLinkActive],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.scss'\n})\nexport class NavbarComponent {\n isLogin=input(true);\n  readonly authService=inject(AuthService)\n\n\n\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Fresh Cart\n      \n      \n        Open main menu\n        \n          \n        \n      \n      \n        @if(isLogin()){\n        \n          \n            home\n          \n          \n            product\n          \n\n          \n            categories\n          \n          \n            brands\n          \n        \n        }\n\n        \n          @if(!isLogin()){\n\n          \n            Login\n          \n          \n            Register\n          \n          }@else{\n          \n            \n          \n          \n            \n          \n          \n            LogOut\n          \n          }\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Fresh Cart                    Open main menu                                              @if(isLogin()){                              home                                product                                categories                                brands                          }                  @if(!isLogin()){                      Login                                Register                    }@else{                                                                                      LogOut                    }                    '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotfoundComponent.html":{"url":"components/NotfoundComponent.html","title":"component - NotfoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotfoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/notfound/notfound.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notfound\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./notfound.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notfound.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  imports: [],\n  templateUrl: './notfound.component.html',\n  styleUrl: './notfound.component.scss'\n})\nexport class NotfoundComponent {\n\n}\n\n    \n\n    \n        notfound works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'notfound works!'\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotfoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                myToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkOutPayMent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/orders/orders.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkOutPayMent\n                        \n                    \n                \n            \n            \n                \ncheckOutPayMent(id: string, data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/orders/orders.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        myToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : localStorage.getItem('userToken')\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/orders/orders.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  constructor( private httpClient:HttpClient) { }\n  myToken:any=localStorage.getItem('userToken');\n\n  checkOutPayMent(id:string ,data:object):Observable{\n    return this.httpClient.post(`https://ecommerce.routemisr.com/api/v1/orders/checkout-session/${id}?url=http://localhost:4200`,\n      {\n        \"shippingAddress\":data\n    },{\n      headers:{\n        token:this.myToken\n      }\n    }\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string;\n  cartOwner: string;\n  products: Product2[];\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  totalCartPrice: number;\n}\n\nexport interface Product2 {\n  count: number;\n  _id: string;\n  product: Product;\n  price: number;\n}\n\nexport interface Product {\n  subcategory: Subcategory[];\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product2.html":{"url":"interfaces/Product2.html","title":"interface - Product2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            product\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        product:         Product\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string;\n  cartOwner: string;\n  products: Product2[];\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  totalCartPrice: number;\n}\n\nexport interface Product2 {\n  count: number;\n  _id: string;\n  product: Product;\n  price: number;\n}\n\nexport interface Product {\n  subcategory: Subcategory[];\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductComponent.html":{"url":"components/ProductComponent.html","title":"component - ProductComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/product/product.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                            TitleCasePipe\n                            CurrencyPipe\n                            SearchPipe\n                            FormsModule\n                            SlicePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                hamada\n                            \n                            \n                                products\n                            \n                            \n                                    Private\n                                    Readonly\n                                productsService\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                            \n                                    Private\n                                    Readonly\n                                whishingService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCard\n                            \n                            \n                                addToWhishing\n                            \n                            \n                                getProductsData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCard\n                        \n                    \n                \n            \n            \n                \naddToCard(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addToWhishing\n                        \n                    \n                \n            \n            \n                \naddToWhishing(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductsData\n                        \n                    \n                \n            \n            \n                \ngetProductsData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hamada\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IProduct[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        whishingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(WhishingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ProductsService } from '../../core/services/products/products.service';\nimport { IProduct } from '../../shared/interfaces/iproduct';\nimport { RouterLink } from '@angular/router';\nimport { CurrencyPipe, SlicePipe, TitleCasePipe } from '@angular/common';\nimport { SearchPipe } from '../../shared/pipes/search/search.pipe';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormsModule } from '@angular/forms';\nimport { CartService } from '../../core/services/cart/cart.service';\nimport { WhishingService } from '../../core/services/whishing/whishing.service';\n\n@Component({\n  selector: 'app-product',\n  imports: [\n    RouterLink,\n    TitleCasePipe,\n    CurrencyPipe,\n    SearchPipe,\n    FormsModule,\n    SlicePipe,\n  ],\n  templateUrl: './product.component.html',\n  styleUrl: './product.component.scss',\n})\nexport class ProductComponent implements OnInit {\n  private readonly productsService = inject(ProductsService);\n  private readonly toastrService = inject(ToastrService);\n  private readonly cartService = inject(CartService);\n  private readonly whishingService = inject(WhishingService);\n\n  products: IProduct[] = [];\n  hamada: string = '';\n\n  ngOnInit(): void {\n    this.getProductsData();\n  }\n\n  getProductsData() {\n    this.productsService.getAllProducts().subscribe({\n      next: (res) => {\n        this.products = res.data;\n      },\n      error: (err) => {\n        console.error('Error fetching products:', err);\n      },\n    });\n  }\n\n  addToWhishing(id: string): void {\n    this.whishingService.addProductToWhishingList(id).subscribe({\n      next: (res) => {\n        console.log(res);\n        if (res.status === 'success') {\n          this.toastrService.success(res.message, 'FreshCart');\n        }\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n  addToCard(id: string): void {\n    this.cartService.addProductToCart(id).subscribe({\n      next: (res) => {\n        if (res.status === 'success') {\n          this.toastrService.success(res.message, 'Fresh Cart');\n        }\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Popular Product\n    \n    \n      @for (prod of products.slice(0,12) | search : hamada ; track prod.id){\n      \n        \n          \n            \n          \n          \n            \n              {{ prod.category.name | slice : 0 : 5 }}\n            \n            \n              {{ prod.title.split(\" \", 2).join(\" \") | titlecase }}\n            \n            \n              {{ prod.price | currency : \"EUR\" }}\n              \n                \n                {{ prod.ratingsAverage }}\n              \n            \n          \n        \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Popular Product              @for (prod of products.slice(0,12) | search : hamada ; track prod.id){                                                                                  {{ prod.category.name | slice : 0 : 5 }}                                      {{ prod.title.split(\" \", 2).join(\" \") | titlecase }}                                      {{ prod.price | currency : \"EUR\" }}                                              {{ prod.ratingsAverage }}                                                                                                                                        }      '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllProducts\n                            \n                            \n                                getSpecificProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClint: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/products/products.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClint\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \ngetAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/products/products.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSpecificProduct\n                        \n                    \n                \n            \n            \n                \ngetSpecificProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/products/products.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor( private httpClint:HttpClient) { }\n\ngetAllProducts():Observable\n{\n return  this.httpClint.get(\"https://ecommerce.routemisr.com/api/v1/products\")\n} \n\ngetSpecificProduct(id:string):Observable\n{\n return  this.httpClint.get(`https://ecommerce.routemisr.com/api/v1/products/${id}`)\n} \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                    Private\n                                    Readonly\n                                formBuilder\n                            \n                            \n                                isLoading\n                            \n                            \n                                isSuccess\n                            \n                            \n                                msgError\n                            \n                            \n                                register\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n            \n                \nconfirmPassword(group: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        msgError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formBuilder.group({\n  name:[null , [      Validators.required,      Validators.minLength(3),      Validators.maxLength(20),    ]   ],\n  email:[null ,  [      Validators.required,      Validators.email    ]],\n  password:[null ,  [      Validators.required,      Validators.pattern(/^[A-Z]\\w{7,}$/)    ]],\n  rePassword:[null , [      Validators.required,  ] ],\n  phone:[null , [      Validators.required,      Validators.pattern(/^01[0125][0-9]{8}$/)    ]]\n} , { validators : this.confirmPassword})\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from \"@angular/forms\"\nimport { AuthService } from '../../core/services/auth/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  imports: [ReactiveFormsModule],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss'\n})\nexport class RegisterComponent {\n\nprivate readonly authService=inject(AuthService)\nprivate readonly formBuilder=inject(FormBuilder)\nprivate readonly router=inject(Router)\n\nisLoading:boolean=false\nmsgError:string=\"\";\nisSuccess:string=\"\";\nregister:FormGroup=this.formBuilder.group({\n  name:[null , [      Validators.required,      Validators.minLength(3),      Validators.maxLength(20),    ]   ],\n  email:[null ,  [      Validators.required,      Validators.email    ]],\n  password:[null ,  [      Validators.required,      Validators.pattern(/^[A-Z]\\w{7,}$/)    ]],\n  rePassword:[null , [      Validators.required,  ] ],\n  phone:[null , [      Validators.required,      Validators.pattern(/^01[0125][0-9]{8}$/)    ]]\n} , { validators : this.confirmPassword})\n//   register:FormGroup =new FormGroup({\n//   name:new FormControl(null ,      [      Validators.required,      Validators.minLength(3),      Validators.maxLength(20),    ]  ),\n//   email:new FormControl(null ,    [      Validators.required,      Validators.email    ]  ),\n//   password:new FormControl(null,    [      Validators.required,      Validators.pattern(/^[A-Z]\\w{7,}$/)    ]  ),\n//   rePassword:new FormControl(null,    [      Validators.required,  ]  ),\n//   phone:new FormControl(null,    [      Validators.required,      Validators.pattern(/^01[0125][0-9]{8}$/)    ]  ),\n// } , {\n//   validators : this.confirmPassword\n// })\n\nsubmitForm():void{\n      if(this.register.valid){\n        this.isLoading=true\n        this.authService.sendRegisterForm(this.register.value).subscribe({\n          next:(res)=>{\n            console.log(res);\n            if(res.message === 'success'){\n              // navigate path login\n              // routerlink programming routing\n\n              \n             setTimeout(()=>{\n\n       \n\n              //2-nav\n              this.router.navigate(['/login'])\n\n             },500)\n\n              this.isSuccess=res.message\n\n            }\n            this.isLoading=false\n          },\n          error:(error:HttpErrorResponse)=>{\n            console.log(error);\n           this.msgError= error.error.message\n            this.isLoading=false\n          }\n        \n        })\n      }else{\n        this.register.markAllAsTouched()\n      }\n}\nconfirmPassword( group:  AbstractControl){\n    // password\n    let password=group.get('password')?.value\n    let rePassword=group.get('rePassword')?.value\n    //  rePassword\n\n    return password === rePassword ? null : {mismatch:true}\n\n}\n}\n\n    \n\n    \n        \n  \n    Register Now\n\n    \n      \n        name\n        \n        @if( register.get('name')?.errors && register.get('name')?.touched){\n        \n          \n            \n          \n          Danger\n          \n            \n              @if(register.get('name')?.getError('required')){\n              Name is required.\n              } @else if (register.get('name')?.getError('minlength')) {\n              Name must be at least 3 characters.\n              }@else if (register.get('name')?.getError('maxlength')) {\n              Name cannot exceed 20 characters.\n              }\n            \n          \n        \n        }\n      \n\n      \n      \n        email\n        \n        @if(register.get('email')?.errors && register.get('email')?.touched){\n        \n          \n            \n          \n          Danger\n          \n            \n              @if (register.get('email')?.getError('required')) {\n              Email is required.\n              }@else if (register.get('email')?.getError('email')) {\n              Please enter a valid email address.\n              }\n            \n          \n        \n        }\n      \n\n      \n      \n        password\n        \n        @if(register.get('password')?.errors &&\n        register.get('password')?.touched){\n        \n          \n            \n          \n          Danger\n          \n            Ensure that these requirements are met:\n            \n              @if(register.get('password')?.getError('required')){\n              Password is required.\n              }@else if (register.get('password')?.getError('pattern')) {\n              \n                Password must start with an uppercase letter and be at least 8\n                characters long.\n              \n              }\n            \n          \n        \n        }\n      \n\n      \n      \n        rePassword\n        \n        @if(register.getError('mismatch') &&\n        register.get('rePassword')?.touched){\n        \n          Danger\n          \n            \n              Password confrmation is incoreect.\n            \n          \n        \n        } @if(register.get('rePassword')?.getError('required') &&\n        register.get('rePassword')?.touched){\n        \n          Danger\n          \n            \n              Password is required .\n            \n          \n        \n        }\n      \n      \n      \n        phone\n        \n        @if (register.get('phone')?.errors && register.get('phone')?.touched) {\n        \n          \n            \n          \n          Danger\n          \n            Ensure that these requirements are met:\n            \n              @if(register.get('phone')?.getError('required')){\n              Phone number is required.\n              }@else if (register.get('phone')?.getError('pattern')) {\n              \n                Phone number must be a valid Egyptian number (e.g., 010, 011,\n                012, or 015 followed by 8 digits).\n              \n              }\n            \n          \n        \n        }\n      \n\n      \n        SignUp @if(isLoading){\n         \n        }\n      \n      @if (msgError) {\n      \n        {{ msgError }}\n      \n      } @if (isSuccess) {\n      \n        Account Created\n      \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Register Now                  name                @if( register.get(\\'name\\')?.errors && register.get(\\'name\\')?.touched){                                                  Danger                                    @if(register.get(\\'name\\')?.getError(\\'required\\')){              Name is required.              } @else if (register.get(\\'name\\')?.getError(\\'minlength\\')) {              Name must be at least 3 characters.              }@else if (register.get(\\'name\\')?.getError(\\'maxlength\\')) {              Name cannot exceed 20 characters.              }                                      }                          email                @if(register.get(\\'email\\')?.errors && register.get(\\'email\\')?.touched){                                                  Danger                                    @if (register.get(\\'email\\')?.getError(\\'required\\')) {              Email is required.              }@else if (register.get(\\'email\\')?.getError(\\'email\\')) {              Please enter a valid email address.              }                                      }                          password                @if(register.get(\\'password\\')?.errors &&        register.get(\\'password\\')?.touched){                                                  Danger                      Ensure that these requirements are met:                          @if(register.get(\\'password\\')?.getError(\\'required\\')){              Password is required.              }@else if (register.get(\\'password\\')?.getError(\\'pattern\\')) {                              Password must start with an uppercase letter and be at least 8                characters long.                            }                                      }                          rePassword                @if(register.getError(\\'mismatch\\') &&        register.get(\\'rePassword\\')?.touched){                  Danger                                    Password confrmation is incoreect.                                      } @if(register.get(\\'rePassword\\')?.getError(\\'required\\') &&        register.get(\\'rePassword\\')?.touched){                  Danger                                    Password is required .                                      }                          phone                @if (register.get(\\'phone\\')?.errors && register.get(\\'phone\\')?.touched) {                                                  Danger                      Ensure that these requirements are met:                          @if(register.get(\\'phone\\')?.getError(\\'required\\')){              Phone number is required.              }@else if (register.get(\\'phone\\')?.getError(\\'pattern\\')) {                              Phone number must be a valid Egyptian number (e.g., 010, 011,                012, or 015 followed by 8 digits).                            }                                      }                    SignUp @if(isLoading){                 }            @if (msgError) {              {{ msgError }}            } @if (isSuccess) {              Account Created            }      '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SearchPipe.html":{"url":"pipes/SearchPipe.html","title":"pipe - SearchPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SearchPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/search/search.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        search\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(arr: any[], text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/search/search.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform( arr:any[] , text:string): any {\n    return arr.filter(  (item)=>item.title.toLowerCase().includes(text.toLowerCase()));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory.html":{"url":"interfaces/Subcategory.html","title":"interface - Subcategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string;\n  cartOwner: string;\n  products: Product2[];\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  totalCartPrice: number;\n}\n\nexport interface Product2 {\n  count: number;\n  _id: string;\n  product: Product;\n  price: number;\n}\n\nexport interface Product {\n  subcategory: Subcategory[];\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory-1.html":{"url":"interfaces/Subcategory-1.html","title":"interface - Subcategory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProduct {\n    sold: number\n    images: string[]\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    slug: string\n    description: string\n    quantity: number\n    price: number\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    createdAt: string\n    updatedAt: string\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory-2.html":{"url":"interfaces/Subcategory-2.html","title":"interface - Subcategory-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iwhish.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IWhish {\n  status: string;\n  count: number;\n  data: Datum[];\n}\n\nexport interface Datum {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/WelcomePipe.html":{"url":"pipes/WelcomePipe.html","title":"pipe - WelcomePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  WelcomePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/welcome/welcome.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        welcome\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/welcome/welcome.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'welcome'\n})\nexport class WelcomePipe implements PipeTransform {\n\n  transform(value: string): string {\n    return`Welcome ${value}`;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WhishingService.html":{"url":"injectables/WhishingService.html","title":"injectable - WhishingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WhishingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/whishing/whishing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProductToWhishingList\n                            \n                            \n                                deleteItemFromWhishingList\n                            \n                            \n                                getWhishingListItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/whishing/whishing.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProductToWhishingList\n                        \n                    \n                \n            \n            \n                \naddProductToWhishingList(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/whishing/whishing.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteItemFromWhishingList\n                        \n                    \n                \n            \n            \n                \ndeleteItemFromWhishingList(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/whishing/whishing.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWhishingListItems\n                        \n                    \n                \n            \n            \n                \ngetWhishingListItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/whishing/whishing.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WhishingService {\n  constructor(private httpClient: HttpClient) {}\n\n  addProductToWhishingList(id: string): Observable {\n    return this.httpClient.post(\n      'https://ecommerce.routemisr.com/api/v1/wishlist',\n      {\n        productId: id,\n      }\n    );\n  }\n\n  deleteItemFromWhishingList(id: string): Observable {\n    return this.httpClient.delete(\n      `https://ecommerce.routemisr.com/api/v1/wishlist/${id}`\n    );\n  }\n\n  getWhishingListItems(): Observable {\n    return this.httpClient.get(\n      'https://ecommerce.routemisr.com/api/v1/wishlist'\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WhishlistComponent.html":{"url":"components/WhishlistComponent.html","title":"component - WhishlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WhishlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/whishlist/whishlist.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-whishlist\n            \n\n\n            \n                imports\n                \n                            CarouselModule\n                            CurrencyPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./whishlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./whishlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                customMainSlider\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                            \n                                    Private\n                                    Readonly\n                                whishingService\n                            \n                            \n                                whishItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCard\n                            \n                            \n                                deleteItem\n                            \n                            \n                                getWhishingItems\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCard\n                        \n                    \n                \n            \n            \n                \naddToCard(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/whishlist/whishlist.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteItem\n                        \n                    \n                \n            \n            \n                \ndeleteItem(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/whishlist/whishlist.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWhishingItems\n                        \n                    \n                \n            \n            \n                \ngetWhishingItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/whishlist/whishlist.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/whishlist/whishlist.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/whishlist/whishlist.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customMainSlider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwlOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n    navText: ['', ''],\n    items: 1,\n    nav: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/whishlist/whishlist.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/whishlist/whishlist.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        whishingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(WhishingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/whishlist/whishlist.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whishItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IWhish\n\n                    \n                \n                \n                    \n                        Default value : {} as IWhish\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/whishlist/whishlist.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { WhishingService } from '../../core/services/whishing/whishing.service';\nimport { IWhish } from '../../shared/interfaces/iwhish';\nimport { CarouselModule, OwlOptions } from 'ngx-owl-carousel-o';\nimport { CurrencyPipe } from '@angular/common';\nimport { CartService } from '../../core/services/cart/cart.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-whishlist',\n  imports: [CarouselModule, CurrencyPipe],\n  templateUrl: './whishlist.component.html',\n  styleUrl: './whishlist.component.scss',\n})\nexport class WhishlistComponent implements OnInit {\n  private readonly whishingService = inject(WhishingService);\n  private readonly toastrService = inject(ToastrService);\n  private readonly cartService = inject(CartService);\n\n  whishItems: IWhish = {} as IWhish;\n\n  customMainSlider: OwlOptions = {\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n    navText: ['', ''],\n    items: 1,\n    nav: true,\n  };\n\n  ngOnInit(): void {\n    this.getWhishingItems();\n  }\n\n  getWhishingItems(): void {\n    this.whishingService.getWhishingListItems().subscribe({\n      next: (res) => {\n        console.log(res);\n        this.whishItems = res;\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n\n  deleteItem(id: string): void {\n    this.whishingService.deleteItemFromWhishingList(id).subscribe({\n      next: (res) => {\n        console.log(res);\n        this.getWhishingItems();\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n  addToCard(id: string): void {\n    this.cartService.addProductToCart(id).subscribe({\n      next: (res) => {\n        console.log(res);\n        if (res.status === 'success') {\n          this.toastrService.success(res.message, 'FreshCart');\n        }\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  @if(whishItems.count){\n\n  \n    Whishing List\n    \n      \"Dream it. Wish it. Get it. Your perfect picks, all in one place!\"\n    \n\n    @for (item of whishItems.data; track item._id) {\n    \n      \n        \n      \n      \n        \n          {{ item.title }}\n          \n            Price: \n            {{ item.price | currency : \"GBP\" }}\n          \n          {{ item.description }}\n        \n        \n          \n            Add to Cart\n          \n          \n            Delete Item\n          \n        \n      \n    \n    }\n  \n\n  }@else {\n\n  \n    \n    Oops! Your List is Empty\n  \n\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if(whishItems.count){      Whishing List          \"Dream it. Wish it. Get it. Your perfect picks, all in one place!\"        @for (item of whishItems.data; track item._id) {                                                {{ item.title }}                      Price:             {{ item.price | currency : \"GBP\" }}                    {{ item.description }}                                      Add to Cart                                Delete Item                                }    }@else {          Oops! Your List is Empty    }'\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetpasswordComponent', 'selector': 'app-forgetpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WhishlistComponent', 'selector': 'app-whishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WhishlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/auth/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/loged/loged.guard.ts\n            \n            variable\n            logedGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/errors/errors.interceptor.ts\n            \n            variable\n            errorsInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/headers/headers.interceptor.ts\n            \n            variable\n            headersInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/loading/loading.interceptor.ts\n            \n            variable\n            loadingInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/brands/brands.service.ts\n            \n            injectable\n            BrandsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/cart/cart.service.ts\n            \n            injectable\n            CartService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/flowbite/flowbite.service.ts\n            \n            injectable\n            FlowbiteService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/whishing/whishing.service.ts\n            \n            injectable\n            WhishingService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layout/auth-layout/auth-layout.component.ts\n            \n            component\n            AuthLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/blank-layout/blank-layout.component.ts\n            \n            component\n            BlankLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/allorders/allorders.component.ts\n            \n            component\n            AllordersComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/brands/brands.component.ts\n            \n            component\n            BrandsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/cart/cart.component.ts\n            \n            component\n            CartComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/categories/categories.component.ts\n            \n            component\n            CategoriesComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/checkout/checkout.component.ts\n            \n            component\n            CheckoutComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/details/details.component.ts\n            \n            component\n            DetailsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/forgetpassword/forgetpassword/forgetpassword.component.ts\n            \n            component\n            ForgetpasswordComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/notfound/notfound.component.ts\n            \n            component\n            NotfoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/product/product.component.ts\n            \n            component\n            ProductComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/whishlist/whishlist.component.ts\n            \n            component\n            WhishlistComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/ibrands.ts\n            \n            interface\n            IBrands\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            ICart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Product2\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icategories.ts\n            \n            interface\n            ICategories\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iproduct.ts\n            \n            interface\n            Brand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iproduct.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iproduct.ts\n            \n            interface\n            IProduct\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iproduct.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iwhish.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iwhish.ts\n            \n            interface\n            Datum\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iwhish.ts\n            \n            interface\n            IWhish\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iwhish.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/search/search.pipe.ts\n            \n            pipe\n            SearchPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/welcome/welcome.pipe.ts\n            \n            pipe\n            WelcomePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.0\n        \n            @angular/common : ^19.1.0\n        \n            @angular/compiler : ^19.1.0\n        \n            @angular/core : ^19.1.0\n        \n            @angular/forms : ^19.1.0\n        \n            @angular/platform-browser : ^19.1.0\n        \n            @angular/platform-browser-dynamic : ^19.1.0\n        \n            @angular/platform-server : ^19.1.0\n        \n            @angular/router : ^19.1.0\n        \n            @angular/ssr : ^19.1.6\n        \n            @fortawesome/fontawesome-free : ^6.7.2\n        \n            @sweetalert2/ngx-sweetalert2 : ^13.0.0\n        \n            express : ^4.18.2\n        \n            flowbite : ^3.1.2\n        \n            jwt-decode : ^4.0.0\n        \n            ngx-owl-carousel-o : ^19.0.0\n        \n            ngx-spinner : ^19.0.0\n        \n            ngx-toastr : ^19.0.0\n        \n            rxjs : ~7.8.0\n        \n            sweetalert2 : ^11.17.2\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEcom\nThis project was generated using Angular CLI version 19.1.6.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errorsInterceptor   (src/.../errors.interceptor.ts)\n                        \n                        \n                            headersInterceptor   (src/.../headers.interceptor.ts)\n                        \n                        \n                            loadingInterceptor   (src/.../loading.interceptor.ts)\n                        \n                        \n                            logedGuard   (src/.../loged.guard.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    The request handler used by the Angular CLI (dev-server and during build).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideClientHydration(withEventReplay()),\n    provideHttpClient(\n      withFetch(),\n      withInterceptors([\n        headersInterceptor,\n        errorsInterceptor,\n        loadingInterceptor,\n      ])\n    ),\n    provideAnimations(),\n    provideToastr(),\n    importProvidersFrom(NgxSpinnerModule),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n\n  const router=inject(Router)\n  const id= inject(PLATFORM_ID)\n\n  if(isPlatformBrowser(id)){\n    if(localStorage.getItem('userToken') !== null){\n      return true;\n     }else{\n      router.navigate(['/login'])\n      return false;\n    }\n  }else{\n    return false;\n  }\n \n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    baseUrl:'https://ecommerce.routemisr.com'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/errors/errors.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorsInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const toastrService = inject(ToastrService);\n\n  return next(req).pipe(\n    catchError((error) => {\n      toastrService.error(error.error.message, 'FreshCart');\n\n      return throwError(() => error);\n    })\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/headers/headers.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        headersInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  // requist --- send headers\n  // don't work direct get clone\n\n  if (localStorage.getItem('userToken')) {\n    req = req.clone({\n      setHeaders: {\n        token: localStorage.getItem('userToken')!,\n      },\n    });\n  }\n\n  return next(req);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/loading/loading.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadingInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const ngxSpinnerService = inject(NgxSpinnerService);\n\n  ngxSpinnerService.show();\n\n  return next(req).pipe(\n    finalize(() => {\n      // logic after the req end\n      ngxSpinnerService.hide();\n    })\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/loged/loged.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logedGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n   const router=inject(Router  )\n  const id=inject(PLATFORM_ID)\nif(isPlatformBrowser(id)){\n  if(localStorage.getItem('userToken') !== null){\n    router.navigate(['/home'])\n   return false;\n  }else{\n   return true;\n  }\n}else{\n  return false;\n}\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
